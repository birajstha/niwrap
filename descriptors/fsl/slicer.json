{
  "name": "Slicer",
  "command-line": "Slicer [IMAGE_WIDTH] [SCALING] [IN_FILE] [IMAGE_EDGES] [LABEL_SLICES] [COLOUR_MAP] [INTENSITY_RANGE] [THRESHOLD_EDGES] [DITHER_EDGES] [NEAREST_NEIGHBOUR] [SHOW_ORIENTATION] [SINGLE_SLICE] [SLICE_NUMBER] [OUT_FILE] [ARGS] [ENVIRON] [OUTPUT_TYPE]",
  "author": "Nipype (interface)",
  "description": "Slicer, as implemented in Nipype (module: nipype.interfaces.fsl, interface: Slicer).\nUse FSL's slicer command to output a png image from a volume.",
  "inputs": [
    {
      "id": "all_axial",
      "name": "All axial",
      "type": "Flag",
      "value-key": "[ALL_AXIAL]",
      "command-line-flag": "-A",
      "description": "A boolean. Output all axial slices into one picture.",
      "optional": true,
      "requires-inputs": ["image_width"]
    },
    {
      "id": "args",
      "name": "Args",
      "type": "String",
      "value-key": "[ARGS]",
      "description": "A string. Additional parameters to the command.",
      "optional": true
    },
    {
      "id": "colour_map",
      "name": "Colour map",
      "type": "File",
      "value-key": "[COLOUR_MAP]",
      "command-line-flag": "-l",
      "description": "A pathlike object or string representing an existing file. Use different colour map from that stored in nifti header.",
      "optional": true
    },
    {
      "id": "dither_edges",
      "name": "Dither edges",
      "type": "Flag",
      "value-key": "[DITHER_EDGES]",
      "command-line-flag": "-t",
      "description": "A boolean. Produce semi-transparent (dithered) edges.",
      "optional": true
    },
    {
      "id": "image_edges",
      "name": "Image edges",
      "type": "File",
      "value-key": "[IMAGE_EDGES]",
      "description": "A pathlike object or string representing an existing file. Volume to display edge overlay for (useful for checking registration.",
      "optional": true
    },
    {
      "id": "image_width",
      "name": "Image width",
      "type": "Number",
      "integer": true,
      "value-key": "[IMAGE_WIDTH]",
      "description": "An integer. Max picture width.",
      "optional": true
    },
    {
      "id": "in_file",
      "name": "In file",
      "type": "File",
      "value-key": "[IN_FILE]",
      "description": "A pathlike object or string representing an existing file. Input volume.",
      "optional": false
    },
    {
      "id": "intensity_range",
      "name": "Intensity range",
      "type": "Number",
      "list": true,
      "min-list-entries": 2,
      "max-list-entries": 2,
      "value-key": "[INTENSITY_RANGE]",
      "command-line-flag": "-i",
      "description": "A tuple of the form: (a float, a float). Min and max intensities to display.",
      "optional": true
    },
    {
      "id": "label_slices",
      "name": "Label slices",
      "type": "Flag",
      "value-key": "[LABEL_SLICES]",
      "command-line-flag": "-L",
      "description": "A boolean. Display slice number.",
      "optional": true,
      "default-value": true
    },
    {
      "id": "middle_slices",
      "name": "Middle slices",
      "type": "Flag",
      "value-key": "[MIDDLE_SLICES]",
      "command-line-flag": "-a",
      "description": "A boolean. Output picture of mid-sagittal, axial, and coronal slices.",
      "optional": true
    },
    {
      "id": "nearest_neighbour",
      "name": "Nearest neighbour",
      "type": "Flag",
      "value-key": "[NEAREST_NEIGHBOUR]",
      "command-line-flag": "-n",
      "description": "A boolean. Use nearest neighbor interpolation for output.",
      "optional": true
    },
    {
      "id": "out_file",
      "name": "Out file",
      "type": "File",
      "value-key": "[OUT_FILE]",
      "description": "A pathlike object or string representing a file. Picture to write.",
      "optional": true
    },
    {
      "id": "output_type",
      "name": "Output type",
      "type": "String",
      "value-key": "[OUTPUT_TYPE]",
      "description": "'nifti' or 'nifti_pair' or 'nifti_gz' or 'nifti_pair_gz'. Fsl output type.",
      "optional": true,
      "value-choices": ["NIFTI", "NIFTI_PAIR", "NIFTI_GZ", "NIFTI_PAIR_GZ"]
    },
    {
      "id": "sample_axial",
      "name": "Sample axial",
      "type": "Number",
      "integer": true,
      "value-key": "[SAMPLE_AXIAL]",
      "command-line-flag": "-S",
      "description": "An integer. Output every n axial slices into one picture.",
      "optional": true,
      "requires-inputs": ["image_width"]
    },
    {
      "id": "scaling",
      "name": "Scaling",
      "type": "Number",
      "value-key": "[SCALING]",
      "command-line-flag": "-s",
      "description": "A float. Image scale.",
      "optional": true
    },
    {
      "id": "show_orientation",
      "name": "Show orientation",
      "type": "Flag",
      "value-key": "[SHOW_ORIENTATION]",
      "description": "A boolean. Label left-right orientation.",
      "optional": true,
      "default-value": true
    },
    {
      "id": "single_slice",
      "name": "Single slice",
      "type": "String",
      "value-key": "[SINGLE_SLICE]",
      "command-line-flag": "-",
      "description": "'x' or 'y' or 'z'. Output picture of single slice in the x, y, or z plane.",
      "optional": true,
      "requires-inputs": ["slice_number"],
      "value-choices": ["x", "y", "z"]
    },
    {
      "id": "slice_number",
      "name": "Slice number",
      "type": "Number",
      "integer": true,
      "value-key": "[SLICE_NUMBER]",
      "command-line-flag": "-",
      "description": "An integer. Slice number to save in picture.",
      "optional": true
    },
    {
      "id": "threshold_edges",
      "name": "Threshold edges",
      "type": "Number",
      "value-key": "[THRESHOLD_EDGES]",
      "command-line-flag": "-e",
      "description": "A float. Use threshold for edges.",
      "optional": true
    }
  ],
  "output-files": [
    {
      "name": "Out file",
      "id": "out_file_outfile",
      "path-template": "[OUT_FILE]",
      "optional": true,
      "description": "A pathlike object or string representing an existing file. Picture to write."
    }
  ],
  "groups": [
    {
      "id": "mutex_group",
      "name": "Mutex group",
      "members": ["sample_axial", "single_slice", "middle_slices", "all_axial"],
      "mutually-exclusive": true
    }
  ],
  "tool-version": "1.0.0",
  "schema-version": "0.5",
  "container-image": {
    "image": "fcpindi/c-pac:latest",
    "type": "docker"
  },
  "tags": {
    "domain": "neuroinformatics",
    "source": "nipype-interface"
  }
}
