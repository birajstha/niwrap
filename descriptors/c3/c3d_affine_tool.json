{
  "name": "C3dAffineTool",
  "command-line": "C3dAffineTool [REFERENCE_FILE] [SOURCE_FILE] [TRANSFORM_FILE] [FSL2RAS] [ITK_TRANSFORM] [ARGS] [ENVIRON]",
  "author": "Nipype (interface)",
  "description": "C3dAffineTool, as implemented in Nipype (module: nipype.interfaces.c3, interface: C3dAffineTool).\n\nConverts fsl-style Affine registration into ANTS compatible itk format\n\n    Example\n    =======\n\n    >>> from nipype.interfaces.c3 import C3dAffineTool\n    >>> c3 = C3dAffineTool()\n    >>> c3.inputs.source_file = 'cmatrix.mat'\n    >>> c3.inputs.itk_transform = 'affine.txt'\n    >>> c3.inputs.fsl2ras = True\n    >>> c3.cmdline\n    'c3d_affine_tool -src cmatrix.mat -fsl2ras -oitk affine.txt'",
  "inputs": [
    {
      "id": "args",
      "name": "Args",
      "type": "String",
      "value-key": "[ARGS]",
      "description": "A string. Additional parameters to the command.",
      "optional": true
    },
    {
      "id": "environ",
      "name": "Environ",
      "type": "String",
      "value-key": "[ENVIRON]",
      "description": "A dictionary with keys which are a bytes or none or a value of class 'str' and with values which are a bytes or none or a value of class 'str'. Environment variables.",
      "optional": true,
      "default-value": {}
    },
    {
      "id": "fsl2ras",
      "name": "Fsl2ras",
      "type": "Flag",
      "value-key": "[FSL2RAS]",
      "command-line-flag": "-fsl2ras",
      "description": "A boolean. No description provided.",
      "optional": true
    },
    {
      "id": "itk_transform",
      "name": "Itk transform",
      "type": "Flag",
      "value-key": "[ITK_TRANSFORM]",
      "command-line-flag": "-oitk",
      "description": "A boolean or a pathlike object or string representing a file. Export itk transform.",
      "optional": true
    },
    {
      "id": "itk_transform_2",
      "name": "Itk transform",
      "type": "File",
      "value-key": "[ITK_TRANSFORM]",
      "command-line-flag": "-oitk",
      "description": "A boolean or a pathlike object or string representing a file. Export itk transform.",
      "optional": true
    },
    {
      "id": "reference_file",
      "name": "Reference file",
      "type": "File",
      "value-key": "[REFERENCE_FILE]",
      "command-line-flag": "-ref",
      "description": "A pathlike object or string representing an existing file. No description provided.",
      "optional": true
    },
    {
      "id": "source_file",
      "name": "Source file",
      "type": "File",
      "value-key": "[SOURCE_FILE]",
      "command-line-flag": "-src",
      "description": "A pathlike object or string representing an existing file. No description provided.",
      "optional": true
    },
    {
      "id": "transform_file",
      "name": "Transform file",
      "type": "File",
      "value-key": "[TRANSFORM_FILE]",
      "description": "A pathlike object or string representing an existing file. No description provided.",
      "optional": true
    }
  ],
  "output-files": [
    {
      "name": "Itk transform",
      "id": "itk_transform_outfile",
      "path-template": "affine.txt",
      "optional": true,
      "description": "A pathlike object or string representing an existing file. No description provided."
    }
  ],
  "groups": [
    {
      "id": "itk_transform_group",
      "name": "Itk transform group",
      "members": ["itk_transform", "itk_transform_2"],
      "mutually-exclusive": true
    }
  ],
  "tool-version": "1.0.0",
  "schema-version": "0.5",
  "container-image": {
    "image": "container/image",
    "type": "docker"
  },
  "tags": {
    "domain": "neuroinformatics",
    "source": "nipype-interface"
  }
}
