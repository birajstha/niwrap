{
  "tool-version": "1.5.0 2e663bdff57597d5d1fb251dc4740d14d9cf11dd",
  "name": "cifti-create-dense-from-template",
  "author": "Washington University School of Medicin",
  "command-line": "wb_command -cifti-create-dense-from-template [TEMPLATE-CIFTI]",
  "container-image": {
    "image": "mcin/docker-fsl:latest",
    "type": "docker"
  },
  "description": "CREATE CIFTI WITH MATCHING DENSE MAP.\n\nThis command helps you make a new dscalar, dtseries, or dlabel cifti file that matches the brainordinate space used in another cifti file.  The template file must have the desired brainordinate space in the mapping along the column direction (for dtseries, dscalar, dlabel, and symmetric dconn this is always the case).  All input cifti files must have a brain models mapping along column and use the same volume space and/or surface vertex count as the template for structures that they contain.  If any input files contain label data, then input files with non-label data are not allowed, and the -series option may not be used.\n\nAny structure that isn't covered by an input is filled with zeros or the unlabeled key.\n\nThe <structure> argument of -metric, -label or -volume must be one of the following:\n\nCORTEX_LEFT\nCORTEX_RIGHT\nCEREBELLUM\nACCUMBENS_LEFT\nACCUMBENS_RIGHT\nALL_GREY_MATTER\nALL_WHITE_MATTER\nAMYGDALA_LEFT\nAMYGDALA_RIGHT\nBRAIN_STEM\nCAUDATE_LEFT\nCAUDATE_RIGHT\nCEREBELLAR_WHITE_MATTER_LEFT\nCEREBELLAR_WHITE_MATTER_RIGHT\nCEREBELLUM_LEFT\nCEREBELLUM_RIGHT\nCEREBRAL_WHITE_MATTER_LEFT\nCEREBRAL_WHITE_MATTER_RIGHT\nCORTEX\nDIENCEPHALON_VENTRAL_LEFT\nDIENCEPHALON_VENTRAL_RIGHT\nHIPPOCAMPUS_LEFT\nHIPPOCAMPUS_RIGHT\nINVALID\nOTHER\nOTHER_GREY_MATTER\nOTHER_WHITE_MATTER\nPALLIDUM_LEFT\nPALLIDUM_RIGHT\nPUTAMEN_LEFT\nPUTAMEN_RIGHT\nTHALAMUS_LEFT\nTHALAMUS_RIGHT\n\nThe argument to -unit must be one of the following:\n\nSECOND\nHERTZ\nMETER\nRADIAN",
  "schema-version": "0.5",
  "tags": {},
  "inputs": [
    {
      "id": "template-cifti",
      "name": "template-cifti",
      "description": "file to match brainordinates of",
      "type": "File",
      "optional": false,
      "value-key": "[TEMPLATE-CIFTI]"
    },
    {
      "id": "cifti_out",
      "name": "cifti_out",
      "description": "the output cifti file",
      "type": "File",
      "optional": false,
      "value-key": "[CIFTI_OUT]"
    },
    {
      "id": "opt_volume_all_volume_in",
      "name": "opt_volume_all_volume_in",
      "command-line-flag": "-volume-all",
      "description": "specify an input volume file for all voxel data: the input volume file",
      "type": "File",
      "optional": false,
      "value-key": "[OPT_VOLUME_ALL_VOLUME_IN]"
    },
    {
      "id": "opt_label_collision_action",
      "name": "opt_label_collision_action",
      "command-line-flag": "-label-collision",
      "description": "how to handle conflicts between label keys: 'ERROR', 'SURFACES_FIRST', or 'LEGACY', default 'ERROR', use 'LEGACY' to match v1.4.2 and earlier",
      "type": "String",
      "optional": false,
      "value-key": "[OPT_LABEL_COLLISION_ACTION]"
    }
  ],
  "output-files": [
    {
      "id": "cifti_out",
      "name": "cifti_out",
      "path-template": "[CIFTI_OUT]",
      "description": "the output cifti file",
      "optional": false
    }
  ]
}