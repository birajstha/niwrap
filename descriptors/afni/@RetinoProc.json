{
  "tool-version": "1.0",
  "name": "@RetinoProc",
  "author": "Ziad S. Saad",
  "description": "A script to process retinotopic FMRI data, using AFNI's 3dRetinoPhase and SurfRetinMap.",
  "url": "https://afni.nimh.nih.gov",
  "command-line": "@RetinoProc [INPUT_FILES] [OPTIONS]",
  "container-image": {
    "image": "afni/afni_latest",
    "index": "docker.io",
    "type": "docker"
  },
  "inputs": [
    {
      "description": "Input time series dataset for counterclockwise stimulus",
      "value-key": "[CCW_1]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "ccw",
      "name": "Counterclockwise time series",
      "command-line-flag": "-ccw"
    },
    {
      "description": "Input time series dataset for clockwise stimulus",
      "value-key": "[CLW_1]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "clw",
      "name": "Clockwise time series",
      "command-line-flag": "-clw"
    },
    {
      "description": "Input time series dataset for expanding stimulus",
      "value-key": "[EXP_1]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "exp",
      "name": "Expanding time series",
      "command-line-flag": "-exp"
    },
    {
      "description": "Input time series dataset for contracting stimulus",
      "value-key": "[CON_1]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "con",
      "name": "Contracting time series",
      "command-line-flag": "-con"
    },
    {
      "description": "Specify a volume from the EPI time series to which all EPI volumes are aligned",
      "value-key": "[EpiRef]",
      "type": "File",
      "optional": true,
      "id": "epi_ref",
      "name": "EPI Reference Volume",
      "command-line-flag": "-epi_ref"
    },
    {
      "description": "Specify a volume from the EPI time series that is better suited for aligning the T1 to it than EpiRef might be",
      "value-key": "[EpiAnatRef]",
      "type": "File",
      "optional": true,
      "id": "epi_anat_ref",
      "name": "EPI Anatomical Reference Volume",
      "command-line-flag": "-epi_anat_ref"
    },
    {
      "description": "T1 volume acquired during the same session as the retinotopic scans",
      "value-key": "[AVol]",
      "type": "File",
      "optional": true,
      "id": "anat_vol",
      "name": "Anatomical Volume",
      "command-line-flag": "-anat_vol"
    },
    {
      "description": "Anatomical volume aligned to EPI reference",
      "value-key": "[AVol@Epi]",
      "type": "File",
      "optional": true,
      "id": "anat_vol_epi",
      "name": "Aligned Anatomical Volume",
      "command-line-flag": "-anat_vol@epi"
    },
    {
      "description": "Surface Volume for the cortical surfaces",
      "value-key": "[SVol]",
      "type": "File",
      "optional": true,
      "id": "surf_vol",
      "name": "Surface Volume",
      "command-line-flag": "-surf_vol"
    },
    {
      "description": "Surface volume aligned to experiment's EPI data",
      "value-key": "[SVol@Epi]",
      "type": "File",
      "optional": true,
      "id": "surf_vol_epi",
      "name": "Aligned Surface Volume",
      "command-line-flag": "-surf_vol@epi"
    },
    {
      "command-line-flag": "-phase",
      "description": "Use phase of fundamental frequency to estimate latency",
      "value-key": "[PHASE_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "phase",
      "name": "Phase Estimation Flag"
    },
    {
      "command-line-flag": "-delay",
      "description": "Use delay relative to reference time series to estimate latency",
      "value-key": "[DELAY_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "delay",
      "name": "Delay Estimation Flag"
    },
    {
      "command-line-flag": "-TR",
      "description": "TR, in seconds, of retinotopic scans",
      "value-key": "[TR]",
      "type": "Number",
      "optional": false,
      "id": "tr",
      "name": "TR"
    },
    {
      "command-line-flag": "-period_ecc",
      "description": "Period, in seconds, of eccentricity stimuli",
      "value-key": "[PERIOD_ECC]",
      "type": "Number",
      "optional": false,
      "id": "period_ecc",
      "name": "Period (Eccentricity)"
    },
    {
      "command-line-flag": "-period_pol",
      "description": "Period, in seconds, of polar angle stimuli",
      "value-key": "[PERIOD_POL]",
      "type": "Number",
      "optional": false,
      "id": "period_pol",
      "name": "Period (Polar Angle)"
    },
    {
      "command-line-flag": "-pre_ecc",
      "description": "Duration, in seconds, before eccentricity stimulus",
      "value-key": "[PREECC]",
      "type": "Number",
      "optional": true,
      "id": "pre_ecc",
      "name": "Pre-Eccentricity Stimulus Duration"
    },
    {
      "command-line-flag": "-pre_pol",
      "description": "Duration, in seconds, before polar angle stimulus",
      "value-key": "[PREPOL]",
      "type": "Number",
      "optional": true,
      "id": "pre_pol",
      "name": "Pre-Polar Angle Stimulus Duration"
    },
    {
      "command-line-flag": "-on_ecc",
      "description": "Number of stimulation blocks and duration of stimulation for eccentricity stimulus",
      "value-key": "[ON_ECC]",
      "type": "String",
      "optional": true,
      "id": "on_ecc",
      "name": "On Eccentricity Stimulus"
    },
    {
      "command-line-flag": "-on_pol",
      "description": "Number of stimulation blocks and duration of stimulation for polar angle stimulus",
      "value-key": "[ON_POL]",
      "type": "String",
      "optional": true,
      "id": "on_pol",
      "name": "On Polar Angle Stimulus"
    },
    {
      "command-line-flag": "-var_on_ecc",
      "description": "Multiple on durations for eccentricity stimulus",
      "value-key": "[VAR_ON_ECC]",
      "type": "String",
      "optional": true,
      "id": "var_on_ecc",
      "name": "Variable On Eccentricity"
    },
    {
      "command-line-flag": "-var_on_pol",
      "description": "Multiple on durations for polar angle stimulus",
      "value-key": "[VAR_ON_POL]",
      "type": "String",
      "optional": true,
      "id": "var_on_pol",
      "name": "Variable On Polar Angle"
    },
    {
      "command-line-flag": "-nwedges",
      "description": "Number of wedges in polar stimulus",
      "value-key": "[NWED]",
      "type": "Number",
      "optional": true,
      "id": "nwedges",
      "name": "Number of Wedges"
    },
    {
      "command-line-flag": "-nrings",
      "description": "Number of rings in eccentricity stimulus",
      "value-key": "[NRING]",
      "type": "Number",
      "optional": true,
      "id": "nrings",
      "name": "Number of Rings"
    },
    {
      "command-line-flag": "-fwhm_pol",
      "description": "Target smoothness for polar stimulus",
      "value-key": "[FWPOL]",
      "type": "Number",
      "optional": true,
      "id": "fwhm_pol",
      "name": "FWHM Polar"
    },
    {
      "command-line-flag": "-fwhm_ecc",
      "description": "Target smoothness for eccentricity stimulus",
      "value-key": "[FWECC]",
      "type": "Number",
      "optional": true,
      "id": "fwhm_ecc",
      "name": "FWHM Eccentricity"
    },
    {
      "command-line-flag": "-ignore",
      "description": "Ignore volumes from the beginning of each time series",
      "value-key": "[IGN]",
      "type": "Number",
      "optional": true,
      "id": "ignore",
      "name": "Ignore Volumes"
    },
    {
      "command-line-flag": "-no_tshift",
      "description": "Do not correct for slice timing",
      "value-key": "[NO_TSHIFT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "no_tshift",
      "name": "No Slice Timing Correction"
    },
    {
      "command-line-flag": "-spec_left",
      "description": "Spec file for left hemisphere",
      "value-key": "[SPL]",
      "type": "File",
      "optional": true,
      "id": "spec_left",
      "name": "Left Hemisphere Spec"
    },
    {
      "command-line-flag": "-spec_right",
      "description": "Spec file for right hemisphere",
      "value-key": "[SPR]",
      "type": "File",
      "optional": true,
      "id": "spec_right",
      "name": "Right Hemisphere Spec"
    },
    {
      "command-line-flag": "-dorts",
      "description": "Detrend time series using columns in ORT1D file",
      "value-key": "[ORT1D]",
      "type": "File",
      "optional": true,
      "id": "dorts",
      "name": "Detrend ORT File"
    },
    {
      "command-line-flag": "-ccw_orts",
      "description": "Detrend time series for counterclockwise stimulus",
      "value-key": "[CCW_1_ORT]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "ccw_orts",
      "name": "Detrend ORT for CCW"
    },
    {
      "command-line-flag": "-clw_orts",
      "description": "Detrend time series for clockwise stimulus",
      "value-key": "[CLW_1_ORT]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "clw_orts",
      "name": "Detrend ORT for CLW"
    },
    {
      "command-line-flag": "-exp_orts",
      "description": "Detrend time series for expanding stimulus",
      "value-key": "[EXP_1_ORT]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "exp_orts",
      "name": "Detrend ORT for EXP"
    },
    {
      "command-line-flag": "-con_orts",
      "description": "Detrend time series for contracting stimulus",
      "value-key": "[CON_1_ORT]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "con_orts",
      "name": "Detrend ORT for CON"
    },
    {
      "command-line-flag": "-sid",
      "description": "SID is a flag identifying the subject",
      "value-key": "[SID]",
      "type": "String",
      "optional": true,
      "id": "sid",
      "name": "Subject ID"
    },
    {
      "command-line-flag": "-out_dir",
      "description": "Directory where processing results are to be stored",
      "value-key": "[DIR]",
      "type": "String",
      "optional": true,
      "id": "out_dir",
      "name": "Output Directory"
    },
    {
      "command-line-flag": "-echo",
      "description": "Turn on the command echoing to help with debugging script failure",
      "value-key": "[ECHO_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "echo",
      "name": "Echo Command Flag"
    },
    {
      "command-line-flag": "-echo_edu",
      "description": "Turn on command echoing for certain programs only",
      "value-key": "[ECHO_EDU_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "echo_edu",
      "name": "Educational Echo Command Flag"
    },
    {
      "command-line-flag": "-A2E_opts",
      "description": "Pass options to @SUMA_AlignToExperiment script",
      "value-key": "[A2E_OPTS]",
      "type": "String",
      "optional": true,
      "id": "a2e_opts",
      "name": "A2E Options"
    },
    {
      "command-line-flag": "-AEA_opts",
      "description": "Pass options to align_epi_anat.py",
      "value-key": "[AEA_OPTS]",
      "type": "String",
      "optional": true,
      "id": "aea_opts",
      "name": "AEA Options"
    }
  ],
  "schema-version": "0.5"
}
