{
    "name": "Maskave",
    "command-line": "Maskave [IN_FILE] [MASK] [QUIET] [OUT_FILE] [ARGS] [ENVIRON] [NUM_THREADS] [OUTPUTTYPE]",
    "author": "Nipype (interface)",
    "description": "Maskave, as implemented in Nipype (module: nipype.interfaces.afni.preprocess, interface: Maskave).\n\nComputes average of all voxels in the input dataset\n    which satisfy the criterion in the options list\n\n    For complete details, see the `3dmaskave Documentation.\n    <https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dmaskave.html>`_\n\n    Examples\n    --------\n    >>> from nipype.interfaces import afni\n    >>> maskave = afni.Maskave()\n    >>> maskave.inputs.in_file = 'functional.nii'\n    >>> maskave.inputs.mask= 'seed_mask.nii'\n    >>> maskave.inputs.quiet= True\n    >>> maskave.cmdline  # doctest: +ELLIPSIS\n    '3dmaskave -mask seed_mask.nii -quiet functional.nii > functional_maskave.1D'\n    >>> res = maskave.run()  # doctest: +SKIP\n\n    ",
    "inputs": [
        {
            "id": "args",
            "name": "Args",
            "type": "String",
            "value-key": "[ARGS]",
            "description": "A string. Additional parameters to the command.",
            "optional": true
        },
        {
            "id": "environ",
            "name": "Environ",
            "type": "String",
            "value-key": "[ENVIRON]",
            "description": "A dictionary with keys which are a bytes or none or a value of class 'str' and with values which are a bytes or none or a value of class 'str'. Environment variables.",
            "optional": true,
            "default-value": {}
        },
        {
            "id": "in_file",
            "name": "In file",
            "type": "File",
            "value-key": "[IN_FILE]",
            "description": "A pathlike object or string representing an existing file. Input file to 3dmaskave.",
            "optional": false
        },
        {
            "id": "mask",
            "name": "Mask",
            "type": "File",
            "value-key": "[MASK]",
            "command-line-flag": "-mask",
            "description": "A pathlike object or string representing an existing file. Matrix to align input file.",
            "optional": true
        },
        {
            "id": "num_threads",
            "name": "Num threads",
            "type": "Number",
            "integer": true,
            "value-key": "[NUM_THREADS]",
            "description": "An integer. Set number of threads.",
            "optional": true,
            "default-value": 1
        },
        {
            "id": "outputtype",
            "name": "Outputtype",
            "type": "String",
            "value-key": "[OUTPUTTYPE]",
            "description": "'nifti' or 'afni' or 'nifti_gz'. Afni output filetype.",
            "optional": true,
            "value-choices": [
                "NIFTI",
                "AFNI",
                "NIFTI_GZ"
            ]
        },
        {
            "id": "quiet",
            "name": "Quiet",
            "type": "Flag",
            "value-key": "[QUIET]",
            "command-line-flag": "-quiet",
            "description": "A boolean. Matrix to align input file.",
            "optional": true
        }
    ],
    "output-files": [
        {
            "name": "Out file",
            "id": "out_file",
            "optional": true,
            "description": "A pathlike object or string representing a file. Output image file name.",
            "path-template": "[IN_FILE]_maskave.1D",
            "value-key": "[OUT_FILE]",
            "command-line-flag": ">"
        },
        {
            "name": "Out file",
            "id": "out_file",
            "path-template": "out_file",
            "optional": true,
            "description": "A pathlike object or string representing an existing file. Output file."
        }
    ],
    "tool-version": "1.0.0",
    "schema-version": "0.5",
    "container-image": {
        "image": "container/image",
        "type": "docker"
    },
    "tags": {
        "domain": "neuroinformatics",
        "source": "nipype-interface"
    }
}