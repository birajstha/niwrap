{
  "name": "Unifize",
  "command-line": "Unifize [IN_FILE] [ARGS] [CL_FRAC] [ENVIRON] [EPI] [GM] [NO_DUPLO] [NUM_THREADS] [OUT_FILE] [OUTPUTTYPE] [QUIET] [RBT] [SCALE_FILE] [T2] [T2_UP] [URAD]",
  "author": "Nipype (interface)",
  "description": "Unifize, as implemented in Nipype (module: nipype.interfaces.afni.utils, interface: Unifize).\n\n3dUnifize - for uniformizing image intensity\n\n    * The input dataset is supposed to be a T1-weighted volume,\n      possibly already skull-stripped (e.g., via 3dSkullStrip).\n      However, this program can be a useful step to take BEFORE\n      3dSkullStrip, since the latter program can fail if the input\n      volume is strongly shaded -- 3dUnifize will (mostly) remove\n      such shading artifacts.\n\n    * The output dataset has the white matter (WM) intensity approximately\n      uniformized across space, and scaled to peak at about 1000.\n\n    * The output dataset is always stored in float format!\n\n    * If the input dataset has more than 1 sub-brick, only sub-brick\n      #0 will be processed!\n\n    * Want to correct EPI datasets for nonuniformity?\n      You can try the new and experimental [Mar 2017] '-EPI' option.\n\n    * The principal motive for this program is for use in an image\n      registration script, and it may or may not be useful otherwise.\n\n    * This program replaces the older (and very different) 3dUniformize,\n      which is no longer maintained and may sublimate at any moment.\n      (In other words, we do not recommend the use of 3dUniformize.)\n\n    For complete details, see the `3dUnifize Documentation.\n    <https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dUnifize.html>`_",
  "inputs": [
    {
      "id": "args",
      "name": "Args",
      "type": "String",
      "value-key": "[ARGS]",
      "description": "A string. Additional parameters to the command.",
      "optional": true
    },
    {
      "id": "cl_frac",
      "name": "Cl frac",
      "type": "Number",
      "value-key": "[CL_FRAC]",
      "command-line-flag": "-clfrac",
      "description": "A float. Option for afni experts only.set the automask 'clip level fraction'. must be between 0.1 and 0.9. a small fraction means to make the initial threshold for clipping (a la 3dcliplevel) smaller, which will tend to make the mask larger.  [default=0.1].",
      "optional": true
    },
    {
      "id": "environ",
      "name": "Environ",
      "type": "String",
      "value-key": "[ENVIRON]",
      "description": "A dictionary with keys which are a bytes or none or a value of class 'str' and with values which are a bytes or none or a value of class 'str'. Environment variables.",
      "optional": true,
      "default-value": {}
    },
    {
      "id": "epi",
      "name": "Epi",
      "type": "Flag",
      "value-key": "[EPI]",
      "command-line-flag": "-EPI",
      "description": "A boolean. Assume the input dataset is a t2 (or t2\\*) weighted epi time series. after computing the scaling, apply it to all volumes (trs) in the input dataset. that is, a given voxel will be scaled by the same factor at each tr. this option also implies '-noduplo' and '-t2'.this option turns off '-gm' if you turned it on.",
      "optional": true,
      "requires-inputs": ["no_duplo", "t2"]
    },
    {
      "id": "gm",
      "name": "Gm",
      "type": "Flag",
      "value-key": "[GM]",
      "command-line-flag": "-GM",
      "description": "A boolean. Also scale to unifize 'gray matter' = lower intensity voxels (to aid in registering images from different scanners).",
      "optional": true
    },
    {
      "id": "in_file",
      "name": "In file",
      "type": "File",
      "value-key": "[IN_FILE]",
      "command-line-flag": "-input",
      "description": "A pathlike object or string representing an existing file. Input file to 3dunifize.",
      "optional": false
    },
    {
      "id": "no_duplo",
      "name": "No duplo",
      "type": "Flag",
      "value-key": "[NO_DUPLO]",
      "command-line-flag": "-noduplo",
      "description": "A boolean. Do not use the 'duplo down' step; this can be useful for lower resolution datasets.",
      "optional": true
    },
    {
      "id": "num_threads",
      "name": "Num threads",
      "type": "Number",
      "integer": true,
      "value-key": "[NUM_THREADS]",
      "description": "An integer. Set number of threads.",
      "optional": true,
      "default-value": 1
    },
    {
      "id": "outputtype",
      "name": "Outputtype",
      "type": "String",
      "value-key": "[OUTPUTTYPE]",
      "description": "'nifti' or 'afni' or 'nifti_gz'. Afni output filetype.",
      "optional": true,
      "value-choices": ["NIFTI", "AFNI", "NIFTI_GZ"]
    },
    {
      "id": "quiet",
      "name": "Quiet",
      "type": "Flag",
      "value-key": "[QUIET]",
      "command-line-flag": "-quiet",
      "description": "A boolean. Don't print the progress messages.",
      "optional": true
    },
    {
      "id": "rbt",
      "name": "Rbt",
      "type": "Number",
      "list": true,
      "min-list-entries": 3,
      "max-list-entries": 3,
      "value-key": "[RBT]",
      "command-line-flag": "-rbt",
      "description": "A tuple of the form: (a float, a float, a float). Option for afni experts only.specify the 3 parameters for the algorithm:r = radius; same as given by option '-urad', [default=18.3]b = bottom percentile of normalizing data range, [default=70.0]r = top percentile of normalizing data range, [default=80.0].",
      "optional": true
    },
    {
      "id": "scale_file",
      "name": "Scale file",
      "type": "File",
      "value-key": "[SCALE_FILE]",
      "command-line-flag": "-ssave",
      "description": "A pathlike object or string representing a file. Output file name to save the scale factor used at each voxel .",
      "optional": true
    },
    {
      "id": "t2",
      "name": "T2",
      "type": "Flag",
      "value-key": "[T2]",
      "command-line-flag": "-T2",
      "description": "A boolean. Treat the input as if it were t2-weighted, rather than t1-weighted. this processing is done simply by inverting the image contrast, processing it as if that result were t1-weighted, and then re-inverting the results counts of voxel overlap, i.e., each voxel will contain the number of masks that it is set in.",
      "optional": true
    },
    {
      "id": "t2_up",
      "name": "T2 up",
      "type": "Number",
      "value-key": "[T2_UP]",
      "command-line-flag": "-T2up",
      "description": "A float. Option for afni experts only.set the upper percentile point used for t2-t1 inversion. allowed to be anything between 90 and 100 (inclusive), with default to 98.5  (for no good reason).",
      "optional": true
    },
    {
      "id": "urad",
      "name": "Urad",
      "type": "Number",
      "value-key": "[URAD]",
      "command-line-flag": "-Urad",
      "description": "A float. Sets the radius (in voxels) of the ball used for the sneaky trick. default value is 18.3, and should be changed proportionally if the dataset voxel size differs significantly from 1 mm.",
      "optional": true
    }
  ],
  "output-files": [
    {
      "name": "Out file",
      "id": "out_file",
      "optional": true,
      "description": "A pathlike object or string representing a file. Output image file name.",
      "path-template": "[IN_FILE]_unifized",
      "value-key": "[OUT_FILE]",
      "command-line-flag": "-prefix"
    },
    {
      "name": "Out file",
      "id": "out_file",
      "path-template": "out_file",
      "optional": true,
      "description": "A pathlike object or string representing an existing file. Unifized file."
    },
    {
      "name": "Scale file",
      "id": "scale_file_outfile",
      "path-template": "[SCALE_FILE]",
      "optional": true,
      "description": "A pathlike object or string representing a file. Scale factor file."
    }
  ],
  "groups": [
    {
      "id": "mutex_group",
      "name": "Mutex group",
      "members": ["gm", "epi"],
      "mutually-exclusive": true
    }
  ],
  "tool-version": "1.0.0",
  "schema-version": "0.5",
  "container-image": {
    "image": "container/image",
    "type": "docker"
  },
  "tags": {
    "domain": "neuroinformatics",
    "source": "nipype-interface"
  }
}
