{
  "tool-version": "Latest",
  "name": "suma",
  "author": "AFNI Team",
  "descriptor-url": "https://github.com/afni/afni/blob/master/src/suma1/SUMA.c",
  "description": "SUMA: Surface Mapper for visualization and analysis of brain data.",
  "url": "https://afni.nimh.nih.gov/pub/dist/doc/program_help/suma.html",
  "command-line": "suma [SPEC_FILE] [SURF_VOL] [AFNI_HOST] [NIML] [NONIML] [SURFACE_FILE] [SURFACE_TYPE] [CIFTI_DATASET] [GRAPH_DATASET] [TRACTOGRAPHY_DATASET] [VOLUME] [ONESTATE] [ANATOMICAL] [LINEAR_DEPTH] [RECURSIVE_DEPTH] [NOVOLREG] [SETENV] [TRACE] [EXTREME_TRACE] [NOMALL] [YESMALL] [PORT_OFFSET] [PORT_OFFSET_BLOC] [DRIVE_COMMAND] [CLIPPING_PLANE_VERBOSE]",
  "container-image": {
    "image": "fcpindi/c-pac:latest",
    "type": "docker"
  },
  "inputs": [
    {
      "description": "Surface specification file.",
      "command-line-flag": "-spec",
      "value-key": "[SPEC_FILE]",
      "type": "File",
      "optional": true,
      "id": "spec_file",
      "name": "Spec File"
    },
    {
      "description": "Anatomical volume used in creating the surface and registered to the current experiment's anatomical volume.",
      "command-line-flag": "-sv",
      "value-key": "[SURF_VOL]",
      "type": "File",
      "optional": true,
      "id": "surf_vol",
      "name": "SurfVol"
    },
    {
      "description": "Name or IP address of the computer running AFNI.",
      "command-line-flag": "-ah",
      "value-key": "[AFNI_HOST]",
      "type": "String",
      "optional": true,
      "id": "afni_host",
      "name": "AFNI Host"
    },
    {
      "description": "Start listening for communications with NIML-formatted elements.",
      "command-line-flag": "-niml",
      "value-key": "[NIML]",
      "type": "Flag",
      "optional": true,
      "id": "niml",
      "name": "NIML Flag"
    },
    {
      "description": "Do not start listening for communications with NIML-formatted elements.",
      "command-line-flag": "-noniml",
      "value-key": "[NONIML]",
      "type": "Flag",
      "optional": true,
      "id": "noniml",
      "name": "Non NIML Flag"
    },
    {
      "description": "Path to the surface file.",
      "command-line-flag": "-i",
      "value-key": "[SURFACE_FILE]",
      "type": "File",
      "optional": true,
      "id": "surface_file",
      "name": "Surface File"
    },
    {
      "description": "Specify a surface type (e.g. fs, sf, vec, ply, stl, mni, byu, bv, dx, gii, obj).",
      "command-line-flag": "-i_TYPE",
      "value-key": "[SURFACE_TYPE]",
      "type": "String",
      "optional": true,
      "id": "surface_type",
      "name": "Surface Type"
    },
    {
      "description": "CIFTI dataset to display.",
      "command-line-flag": "-cdset",
      "value-key": "[CIFTI_DATASET]",
      "type": "File",
      "optional": true,
      "id": "cifti_dataset",
      "name": "CIFTI Dataset"
    },
    {
      "description": "Graph dataset to display.",
      "command-line-flag": "-gdset",
      "value-key": "[GRAPH_DATASET]",
      "type": "File",
      "optional": true,
      "id": "graph_dataset",
      "name": "Graph Dataset"
    },
    {
      "description": "Tractography dataset to display.",
      "command-line-flag": "-tract",
      "value-key": "[TRACTOGRAPHY_DATASET]",
      "type": "File",
      "optional": true,
      "id": "tractography_dataset",
      "name": "Tractography Dataset"
    },
    {
      "description": "Volume to display.",
      "command-line-flag": "-vol",
      "value-key": "[VOLUME]",
      "type": "File",
      "optional": true,
      "id": "volume",
      "name": "Volume"
    },
    {
      "description": "Make all -i_* surfaces have the same state.",
      "command-line-flag": "-onestate",
      "value-key": "[ONESTATE]",
      "type": "Flag",
      "optional": true,
      "id": "onestate",
      "name": "One State Flag"
    },
    {
      "description": "Label all -i surfaces as anatomically correct.",
      "command-line-flag": "-anatomical",
      "value-key": "[ANATOMICAL]",
      "type": "Flag",
      "optional": true,
      "id": "anatomical",
      "name": "Anatomical Flag"
    },
    {
      "description": "Specify a standard-mesh sphere through linear depth.",
      "command-line-flag": "-i ld",
      "value-key": "[LINEAR_DEPTH]",
      "type": "Number",
      "optional": true,
      "id": "linear_depth",
      "name": "Linear Depth"
    },
    {
      "description": "Specify a standard-mesh sphere through recursive depth.",
      "command-line-flag": "-i rd",
      "value-key": "[RECURSIVE_DEPTH]",
      "type": "Number",
      "optional": true,
      "id": "recursive_depth",
      "name": "Recursive Depth"
    },
    {
      "description": "Ignore any Rotate, Volreg, Tagalign, or WarpDrive transformations.",
      "command-line-flag": "-novolreg",
      "value-key": "[NOVOLREG]",
      "type": "Flag",
      "optional": true,
      "id": "novolreg",
      "name": "No Volreg Flag"
    },
    {
      "description": "Set environment variable.",
      "command-line-flag": "-setenv",
      "value-key": "[SETENV]",
      "type": "String",
      "optional": true,
      "id": "setenv",
      "name": "Set Environment Variable"
    },
    {
      "description": "Use debugging options for SUMA.",
      "command-line-flag": "-trace",
      "value-key": "[TRACE]",
      "type": "Flag",
      "optional": true,
      "id": "trace",
      "name": "Trace Flag"
    },
    {
      "description": "Use extreme debugging options for SUMA.",
      "command-line-flag": "-TRACE",
      "value-key": "[EXTREME_TRACE]",
      "type": "Flag",
      "optional": true,
      "id": "extreme_trace",
      "name": "Extreme Trace Flag"
    },
    {
      "description": "Ignore memory tracing options for SUMA.",
      "command-line-flag": "-nomall",
      "value-key": "[NOMALL]",
      "type": "Flag",
      "optional": true,
      "id": "nomall",
      "name": "No Memory Trace Flag"
    },
    {
      "description": "Use memory tracing options for SUMA.",
      "command-line-flag": "-yesmall",
      "value-key": "[YESMALL]",
      "type": "Flag",
      "optional": true,
      "id": "yesmall",
      "name": "Yes Memory Trace Flag"
    },
    {
      "description": "Specify the port offset for SUMA.",
      "command-line-flag": "-np",
      "value-key": "[PORT_OFFSET]",
      "type": "Number",
      "optional": true,
      "id": "port_offset",
      "name": "Port Offset"
    },
    {
      "description": "Provide port offset bloc for SUMA.",
      "command-line-flag": "-npb",
      "value-key": "[PORT_OFFSET_BLOC]",
      "type": "Number",
      "optional": true,
      "id": "port_offset_bloc",
      "name": "Port Offset Bloc"
    },
    {
      "description": "Drive SUMA with a specific command.",
      "command-line-flag": "-drive_com",
      "value-key": "[DRIVE_COMMAND]",
      "type": "String",
      "optional": true,
      "id": "drive_command",
      "name": "Drive Command"
    },
    {
      "description": "Provide verbose output in clipping plane mode.",
      "command-line-flag": "-clippingPlaneVerbose",
      "value-key": "[CLIPPING_PLANE_VERBOSE]",
      "type": "Number",
      "optional": true,
      "id": "clipping_plane_verbose",
      "name": "Clipping Plane Verbose"
    }
  ],
  "schema-version": "0.5"
}
