{
  "id": "workbench",
  "name": "Connectome Workbench",
  "url": "https://github.com/Washington-University/workbench",
  "author": "Connectome Workbench Developers",
  "approach": "Experimental",
  "status": "Testing",
  "container": "brainlife/connectome_workbench:1.5.0-freesurfer-update",
  "version": "1.5.0",
  "description": "Connectome Workbench is an open source, freely available visualization and discovery tool used to map neuroimaging data, especially data generated by the Human Connectome Project. The distribution includes wb_view, a GUI-based visualiation platform, and wb_command, a command-line program for performing a variety of algorithmic tasks using volume, surface, and grayordinate data. wb_command is necessary for running HCP data processing pipelines.",
  "api": {
    "endpoints": [
      {
        "target": "wb_command -add-to-spec-file",
        "status": "done",
        "descriptor": "descriptors/workbench/add-to-spec-file.json"
      },
      {
        "target": "wb_command -annotation-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/annotation-resample.json"
      },
      {
        "target": "wb_command -backend-average-dense-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/backend-average-dense-roi.json"
      },
      {
        "target": "wb_command -backend-average-roi-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/backend-average-roi-correlation.json"
      },
      {
        "target": "wb_command -border-export-color-table",
        "status": "done",
        "descriptor": "descriptors/workbench/border-export-color-table.json"
      },
      {
        "target": "wb_command -border-file-export-to-caret5",
        "status": "done",
        "descriptor": "descriptors/workbench/border-file-export-to-caret5.json"
      },
      {
        "target": "wb_command -border-length",
        "status": "done",
        "descriptor": "descriptors/workbench/border-length.json"
      },
      {
        "target": "wb_command -border-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/border-merge.json"
      },
      {
        "target": "wb_command -border-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/border-resample.json"
      },
      {
        "target": "wb_command -border-to-rois",
        "status": "done",
        "descriptor": "descriptors/workbench/border-to-rois.json"
      },
      {
        "target": "wb_command -border-to-vertices",
        "status": "done",
        "descriptor": "descriptors/workbench/border-to-vertices.json"
      },
      {
        "target": "wb_command -cifti-all-labels-to-rois",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-all-labels-to-rois.json"
      },
      {
        "target": "wb_command -cifti-average",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-average.json"
      },
      {
        "target": "wb_command -cifti-average-dense-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-average-dense-roi.json"
      },
      {
        "target": "wb_command -cifti-average-roi-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-average-roi-correlation.json"
      },
      {
        "target": "wb_command -cifti-change-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-change-mapping.json"
      },
      {
        "target": "wb_command -cifti-convert",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-convert.json"
      },
      {
        "target": "wb_command -cifti-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-correlation.json"
      },
      {
        "target": "wb_command -cifti-correlation-gradient",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-correlation-gradient.json"
      },
      {
        "target": "wb_command -cifti-create-dense-from-template",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-dense-from-template.json"
      },
      {
        "target": "wb_command -cifti-create-dense-scalar",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-dense-scalar.json"
      },
      {
        "target": "wb_command -cifti-create-dense-timeseries",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-dense-timeseries.json"
      },
      {
        "target": "wb_command -cifti-create-label",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-label.json"
      },
      {
        "target": "wb_command -cifti-create-parcellated-from-template",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-parcellated-from-template.json"
      },
      {
        "target": "wb_command -cifti-create-scalar-series",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-create-scalar-series.json"
      },
      {
        "target": "wb_command -cifti-cross-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-cross-correlation.json"
      },
      {
        "target": "wb_command -cifti-dilate",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-dilate.json"
      },
      {
        "target": "wb_command -cifti-erode",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-erode.json"
      },
      {
        "target": "wb_command -cifti-estimate-fwhm",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-estimate-fwhm.json"
      },
      {
        "target": "wb_command -cifti-export-dense-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-export-dense-mapping.json"
      },
      {
        "target": "wb_command -cifti-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-extrema.json"
      },
      {
        "target": "wb_command -cifti-false-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-false-correlation.json"
      },
      {
        "target": "wb_command -cifti-find-clusters",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-find-clusters.json"
      },
      {
        "target": "wb_command -cifti-gradient",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-gradient.json"
      },
      {
        "target": "wb_command -cifti-label-adjacency",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-adjacency.json"
      },
      {
        "target": "wb_command -cifti-label-export-table",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-export-table.json"
      },
      {
        "target": "wb_command -cifti-label-import",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-import.json"
      },
      {
        "target": "wb_command -cifti-label-modify-keys",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-modify-keys.json"
      },
      {
        "target": "wb_command -cifti-label-probability",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-probability.json"
      },
      {
        "target": "wb_command -cifti-label-to-border",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-to-border.json"
      },
      {
        "target": "wb_command -cifti-label-to-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-label-to-roi.json"
      },
      {
        "target": "wb_command -cifti-math",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-math.json"
      },
      {
        "target": "wb_command -cifti-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-merge.json"
      },
      {
        "target": "wb_command -cifti-merge-dense",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-merge-dense.json"
      },
      {
        "target": "wb_command -cifti-merge-parcels",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-merge-parcels.json"
      },
      {
        "target": "wb_command -cifti-pairwise-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-pairwise-correlation.json"
      },
      {
        "target": "wb_command -cifti-palette",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-palette.json"
      },
      {
        "target": "wb_command -cifti-parcel-mapping-to-label",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-parcel-mapping-to-label.json"
      },
      {
        "target": "wb_command -cifti-parcellate",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-parcellate.json"
      },
      {
        "target": "wb_command -cifti-reduce",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-reduce.json"
      },
      {
        "target": "wb_command -cifti-reorder",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-reorder.json"
      },
      {
        "target": "wb_command -cifti-replace-structure",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-replace-structure.json"
      },
      {
        "target": "wb_command -cifti-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-resample.json"
      },
      {
        "target": "wb_command -cifti-resample-dconn-memory",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-resample-dconn-memory.json"
      },
      {
        "target": "wb_command -cifti-restrict-dense-map",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-restrict-dense-map.json"
      },
      {
        "target": "wb_command -cifti-roi-average",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-roi-average.json"
      },
      {
        "target": "wb_command -cifti-rois-from-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-rois-from-extrema.json"
      },
      {
        "target": "wb_command -cifti-separate",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-separate.json"
      },
      {
        "target": "wb_command -cifti-smoothing",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-smoothing.json"
      },
      {
        "target": "wb_command -cifti-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-stats.json"
      },
      {
        "target": "wb_command -cifti-transpose",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-transpose.json"
      },
      {
        "target": "wb_command -cifti-vector-operation",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-vector-operation.json"
      },
      {
        "target": "wb_command -cifti-weighted-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/cifti-weighted-stats.json"
      },
      {
        "target": "wb_command -class-add-member",
        "status": "ignore"
      },
      {
        "target": "wb_command -class-create",
        "status": "ignore"
      },
      {
        "target": "wb_command -class-create-algorithm",
        "status": "ignore"
      },
      {
        "target": "wb_command -class-create-enum",
        "status": "ignore"
      },
      {
        "target": "wb_command -class-create-operation",
        "status": "ignore"
      },
      {
        "target": "wb_command -convert-affine",
        "status": "done",
        "descriptor": "descriptors/workbench/convert-affine.json"
      },
      {
        "target": "wb_command -convert-fiber-orientations",
        "status": "done",
        "descriptor": "descriptors/workbench/convert-fiber-orientations.json"
      },
      {
        "target": "wb_command -convert-matrix4-to-matrix2",
        "status": "done",
        "descriptor": "descriptors/workbench/convert-matrix4-to-matrix2.json"
      },
      {
        "target": "wb_command -convert-matrix4-to-workbench-sparse",
        "status": "done",
        "descriptor": "descriptors/workbench/convert-matrix4-to-workbench-sparse.json"
      },
      {
        "target": "wb_command -convert-warpfield",
        "status": "done",
        "descriptor": "descriptors/workbench/convert-warpfield.json"
      },
      {
        "target": "wb_command -create-signed-distance-volume",
        "status": "done",
        "descriptor": "descriptors/workbench/create-signed-distance-volume.json"
      },
      {
        "target": "wb_command -estimate-fiber-binghams",
        "status": "done",
        "descriptor": "descriptors/workbench/estimate-fiber-binghams.json"
      },
      {
        "target": "wb_command -fiber-dot-products",
        "status": "done",
        "descriptor": "descriptors/workbench/fiber-dot-products.json"
      },
      {
        "target": "wb_command -file-convert",
        "status": "done",
        "descriptor": "descriptors/workbench/file-convert.json"
      },
      {
        "target": "wb_command -file-information",
        "status": "done",
        "descriptor": "descriptors/workbench/file-information.json"
      },
      {
        "target": "wb_command -foci-create",
        "status": "done",
        "descriptor": "descriptors/workbench/foci-create.json"
      },
      {
        "target": "wb_command -foci-get-projection-vertex",
        "status": "done",
        "descriptor": "descriptors/workbench/foci-get-projection-vertex.json"
      },
      {
        "target": "wb_command -foci-list-coords",
        "status": "done",
        "descriptor": "descriptors/workbench/foci-list-coords.json"
      },
      {
        "target": "wb_command -foci-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/foci-resample.json"
      },
      {
        "target": "wb_command -gifti-all-labels-to-rois",
        "status": "done",
        "descriptor": "descriptors/workbench/gifti-all-labels-to-rois.json"
      },
      {
        "target": "wb_command -gifti-convert",
        "status": "done",
        "descriptor": "descriptors/workbench/gifti-convert.json"
      },
      {
        "target": "wb_command -gifti-label-add-prefix",
        "status": "done",
        "descriptor": "descriptors/workbench/gifti-label-add-prefix.json"
      },
      {
        "target": "wb_command -gifti-label-to-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/gifti-label-to-roi.json"
      },
      {
        "target": "wb_command -label-dilate",
        "status": "done",
        "descriptor": "descriptors/workbench/label-dilate.json"
      },
      {
        "target": "wb_command -label-erode",
        "status": "done",
        "descriptor": "descriptors/workbench/label-erode.json"
      },
      {
        "target": "wb_command -label-export-table",
        "status": "done",
        "descriptor": "descriptors/workbench/label-export-table.json"
      },
      {
        "target": "wb_command -label-mask",
        "status": "done",
        "descriptor": "descriptors/workbench/label-mask.json"
      },
      {
        "target": "wb_command -label-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/label-merge.json"
      },
      {
        "target": "wb_command -label-modify-keys",
        "status": "done",
        "descriptor": "descriptors/workbench/label-modify-keys.json"
      },
      {
        "target": "wb_command -label-probability",
        "status": "done",
        "descriptor": "descriptors/workbench/label-probability.json"
      },
      {
        "target": "wb_command -label-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/label-resample.json"
      },
      {
        "target": "wb_command -label-to-border",
        "status": "done",
        "descriptor": "descriptors/workbench/label-to-border.json"
      },
      {
        "target": "wb_command -label-to-volume-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/label-to-volume-mapping.json"
      },
      {
        "target": "wb_command -metadata-remove-provenance",
        "status": "done",
        "descriptor": "descriptors/workbench/metadata-remove-provenance.json"
      },
      {
        "target": "wb_command -metadata-string-replace",
        "status": "done",
        "descriptor": "descriptors/workbench/metadata-string-replace.json"
      },
      {
        "target": "wb_command -metric-convert",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-convert.json"
      },
      {
        "target": "wb_command -metric-dilate",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-dilate.json"
      },
      {
        "target": "wb_command -metric-erode",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-erode.json"
      },
      {
        "target": "wb_command -metric-estimate-fwhm",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-estimate-fwhm.json"
      },
      {
        "target": "wb_command -metric-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-extrema.json"
      },
      {
        "target": "wb_command -metric-false-correlation",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-false-correlation.json"
      },
      {
        "target": "wb_command -metric-fill-holes",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-fill-holes.json"
      },
      {
        "target": "wb_command -metric-find-clusters",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-find-clusters.json"
      },
      {
        "target": "wb_command -metric-gradient",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-gradient.json"
      },
      {
        "target": "wb_command -metric-label-import",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-label-import.json"
      },
      {
        "target": "wb_command -metric-mask",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-mask.json"
      },
      {
        "target": "wb_command -metric-math",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-math.json"
      },
      {
        "target": "wb_command -metric-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-merge.json"
      },
      {
        "target": "wb_command -metric-palette",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-palette.json"
      },
      {
        "target": "wb_command -metric-reduce",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-reduce.json"
      },
      {
        "target": "wb_command -metric-regression",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-regression.json"
      },
      {
        "target": "wb_command -metric-remove-islands",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-remove-islands.json"
      },
      {
        "target": "wb_command -metric-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-resample.json"
      },
      {
        "target": "wb_command -metric-rois-from-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-rois-from-extrema.json"
      },
      {
        "target": "wb_command -metric-rois-to-border",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-rois-to-border.json"
      },
      {
        "target": "wb_command -metric-smoothing",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-smoothing.json"
      },
      {
        "target": "wb_command -metric-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-stats.json"
      },
      {
        "target": "wb_command -metric-tfce",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-tfce.json"
      },
      {
        "target": "wb_command -metric-to-volume-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-to-volume-mapping.json"
      },
      {
        "target": "wb_command -metric-vector-operation",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-vector-operation.json"
      },
      {
        "target": "wb_command -metric-vector-toward-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-vector-toward-roi.json"
      },
      {
        "target": "wb_command -metric-weighted-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/metric-weighted-stats.json"
      },
      {
        "target": "wb_command -nifti-information",
        "status": "done",
        "descriptor": "descriptors/workbench/nifti-information.json"
      },
      {
        "target": "wb_command -probtrackx-dot-convert",
        "status": "done",
        "descriptor": "descriptors/workbench/probtrackx-dot-convert.json"
      },
      {
        "target": "wb_command -scene-capture-image",
        "status": "done",
        "descriptor": "descriptors/workbench/scene-capture-image.json"
      },
      {
        "target": "wb_command -scene-file-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/scene-file-merge.json"
      },
      {
        "target": "wb_command -scene-file-relocate",
        "status": "done",
        "descriptor": "descriptors/workbench/scene-file-relocate.json"
      },
      {
        "target": "wb_command -scene-file-update",
        "status": "done",
        "descriptor": "descriptors/workbench/scene-file-update.json"
      },
      {
        "target": "wb_command -set-map-names",
        "status": "done",
        "descriptor": "descriptors/workbench/set-map-names.json"
      },
      {
        "target": "wb_command -set-structure",
        "status": "done",
        "descriptor": "descriptors/workbench/set-structure.json"
      },
      {
        "target": "wb_command -signed-distance-to-surface",
        "status": "done",
        "descriptor": "descriptors/workbench/signed-distance-to-surface.json"
      },
      {
        "target": "wb_command -spec-file-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/spec-file-merge.json"
      },
      {
        "target": "wb_command -spec-file-relocate",
        "status": "done",
        "descriptor": "descriptors/workbench/spec-file-relocate.json"
      },
      {
        "target": "wb_command -surface-affine-regression",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-affine-regression.json"
      },
      {
        "target": "wb_command -surface-apply-affine",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-apply-affine.json"
      },
      {
        "target": "wb_command -surface-apply-warpfield",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-apply-warpfield.json"
      },
      {
        "target": "wb_command -surface-average",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-average.json"
      },
      {
        "target": "wb_command -surface-closest-vertex",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-closest-vertex.json"
      },
      {
        "target": "wb_command -surface-coordinates-to-metric",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-coordinates-to-metric.json"
      },
      {
        "target": "wb_command -surface-cortex-layer",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-cortex-layer.json"
      },
      {
        "target": "wb_command -surface-create-sphere",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-create-sphere.json"
      },
      {
        "target": "wb_command -surface-curvature",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-curvature.json"
      },
      {
        "target": "wb_command -surface-cut-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-cut-resample.json"
      },
      {
        "target": "wb_command -surface-distortion",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-distortion.json"
      },
      {
        "target": "wb_command -surface-flip-lr",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-flip-lr.json"
      },
      {
        "target": "wb_command -surface-flip-normals",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-flip-normals.json"
      },
      {
        "target": "wb_command -surface-generate-inflated",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-generate-inflated.json"
      },
      {
        "target": "wb_command -surface-geodesic-distance",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-geodesic-distance.json"
      },
      {
        "target": "wb_command -surface-geodesic-distance-all-to-all",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-geodesic-distance-all-to-all.json"
      },
      {
        "target": "wb_command -surface-geodesic-rois",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-geodesic-rois.json"
      },
      {
        "target": "wb_command -surface-inflation",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-inflation.json"
      },
      {
        "target": "wb_command -surface-information",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-information.json"
      },
      {
        "target": "wb_command -surface-match",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-match.json"
      },
      {
        "target": "wb_command -surface-modify-sphere",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-modify-sphere.json"
      },
      {
        "target": "wb_command -surface-normals",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-normals.json"
      },
      {
        "target": "wb_command -surface-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-resample.json"
      },
      {
        "target": "wb_command -surface-set-coordinates",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-set-coordinates.json"
      },
      {
        "target": "wb_command -surface-smoothing",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-smoothing.json"
      },
      {
        "target": "wb_command -surface-sphere-project-unproject",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-sphere-project-unproject.json"
      },
      {
        "target": "wb_command -surface-sphere-triangular-patches",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-sphere-triangular-patches.json"
      },
      {
        "target": "wb_command -surface-to-surface-3d-distance",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-to-surface-3d-distance.json"
      },
      {
        "target": "wb_command -surface-vertex-areas",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-vertex-areas.json"
      },
      {
        "target": "wb_command -surface-wedge-volume",
        "status": "done",
        "descriptor": "descriptors/workbench/surface-wedge-volume.json"
      },
      {
        "target": "wb_command -unit-test",
        "status": "ignore"
      },
      {
        "target": "wb_command -volume-all-labels-to-rois",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-all-labels-to-rois.json"
      },
      {
        "target": "wb_command -volume-capture-plane",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-capture-plane.json"
      },
      {
        "target": "wb_command -volume-components-to-frames",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-components-to-frames.json"
      },
      {
        "target": "wb_command -volume-copy-extensions",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-copy-extensions.json"
      },
      {
        "target": "wb_command -volume-create",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-create.json"
      },
      {
        "target": "wb_command -volume-dilate",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-dilate.json"
      },
      {
        "target": "wb_command -volume-distortion",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-distortion.json"
      },
      {
        "target": "wb_command -volume-erode",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-erode.json"
      },
      {
        "target": "wb_command -volume-estimate-fwhm",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-estimate-fwhm.json"
      },
      {
        "target": "wb_command -volume-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-extrema.json"
      },
      {
        "target": "wb_command -volume-fill-holes",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-fill-holes.json"
      },
      {
        "target": "wb_command -volume-find-clusters",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-find-clusters.json"
      },
      {
        "target": "wb_command -volume-gradient",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-gradient.json"
      },
      {
        "target": "wb_command -volume-label-export-table",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-export-table.json"
      },
      {
        "target": "wb_command -volume-label-import",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-import.json"
      },
      {
        "target": "wb_command -volume-label-modify-keys",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-modify-keys.json"
      },
      {
        "target": "wb_command -volume-label-probability",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-probability.json"
      },
      {
        "target": "wb_command -volume-label-to-roi",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-to-roi.json"
      },
      {
        "target": "wb_command -volume-label-to-surface-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-label-to-surface-mapping.json"
      },
      {
        "target": "wb_command -volume-math",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-math.json"
      },
      {
        "target": "wb_command -volume-merge",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-merge.json"
      },
      {
        "target": "wb_command -volume-palette",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-palette.json"
      },
      {
        "target": "wb_command -volume-parcel-resampling",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-parcel-resampling.json"
      },
      {
        "target": "wb_command -volume-parcel-resampling-generic",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-parcel-resampling-generic.json"
      },
      {
        "target": "wb_command -volume-parcel-smoothing",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-parcel-smoothing.json"
      },
      {
        "target": "wb_command -volume-reduce",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-reduce.json"
      },
      {
        "target": "wb_command -volume-remove-islands",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-remove-islands.json"
      },
      {
        "target": "wb_command -volume-reorient",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-reorient.json"
      },
      {
        "target": "wb_command -volume-resample",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-resample.json"
      },
      {
        "target": "wb_command -volume-rois-from-extrema",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-rois-from-extrema.json"
      },
      {
        "target": "wb_command -volume-set-space",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-set-space.json"
      },
      {
        "target": "wb_command -volume-smoothing",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-smoothing.json"
      },
      {
        "target": "wb_command -volume-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-stats.json"
      },
      {
        "target": "wb_command -volume-tfce",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-tfce.json"
      },
      {
        "target": "wb_command -volume-to-surface-mapping",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-to-surface-mapping.json"
      },
      {
        "target": "wb_command -volume-vector-operation",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-vector-operation.json"
      },
      {
        "target": "wb_command -volume-warpfield-affine-regression",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-warpfield-affine-regression.json"
      },
      {
        "target": "wb_command -volume-weighted-stats",
        "status": "done",
        "descriptor": "descriptors/workbench/volume-weighted-stats.json"
      },
      {
        "target": "wb_command -wbsparse-merge-dense",
        "status": "done",
        "descriptor": "descriptors/workbench/wbsparse-merge-dense.json"
      },
      {
        "target": "wb_command -zip-scene-file",
        "status": "done",
        "descriptor": "descriptors/workbench/zip-scene-file.json"
      },
      {
        "target": "wb_command -zip-spec-file",
        "status": "done",
        "descriptor": "descriptors/workbench/zip-spec-file.json"
      }
    ]
  }
}