# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

CIFTI_PAIRWISE_CORRELATION_METADATA = Metadata(
    id="0558144d1ff442183f3f2a2ae02b386ae005a017",
    name="cifti-pairwise-correlation",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class CiftiPairwiseCorrelationOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cifti_pairwise_correlation(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    cifti_out: OutputPathType
    """output cifti file"""


def cifti_pairwise_correlation(
    cifti_a: InputPathType,
    cifti_b: InputPathType,
    cifti_out: InputPathType,
    opt_fisher_z: bool = False,
    opt_override_mapping_check: bool = False,
    runner: Runner = None,
) -> CiftiPairwiseCorrelationOutputs:
    """
    cifti-pairwise-correlation by Washington University School of Medicin.
    
    Correlate paired rows between two cifti files.
    
    For each row in <cifti-a>, correlate it with the same row in <cifti-b>, and
    put the result in the same row of <cifti-out>, which has only one column.
    
    Args:
        cifti_a: first input cifti file
        cifti_b: second input cifti file
        cifti_out: output cifti file
        opt_fisher_z: apply fisher small z transform (ie, artanh) to correlation
        opt_override_mapping_check: don't check the mappings for compatibility,
            only check length
        runner: Command runner
    Returns:
        NamedTuple of outputs (described in `CiftiPairwiseCorrelationOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(CIFTI_PAIRWISE_CORRELATION_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-cifti-pairwise-correlation")
    cargs.append(execution.input_file(cifti_a))
    cargs.append(execution.input_file(cifti_b))
    cargs.append(execution.input_file(cifti_out))
    if opt_fisher_z:
        cargs.append("-fisher-z")
    if opt_override_mapping_check:
        cargs.append("-override-mapping-check")
    ret = CiftiPairwiseCorrelationOutputs(
        root=execution.output_file("."),
        cifti_out=execution.output_file(f"{pathlib.Path(cifti_out).name}"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "CIFTI_PAIRWISE_CORRELATION_METADATA",
    "CiftiPairwiseCorrelationOutputs",
    "cifti_pairwise_correlation",
]
