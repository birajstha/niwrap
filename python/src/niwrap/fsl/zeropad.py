# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

ZEROPAD_METADATA = Metadata(
    id="6b270d62e20a95b19281ded727f3259fe3f2552a.boutiques",
    name="zeropad",
    package="fsl",
    container_image_tag="mcin/fsl:6.0.5",
)


class ZeropadOutputs(typing.NamedTuple):
    """
    Output object returned when calling `zeropad(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """File containing the zero-padded output"""


def zeropad(
    input_number: str,
    length: float,
    runner: Runner | None = None,
) -> ZeropadOutputs:
    """
    Tool for zero-padding numbers to a specified length.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        input_number: Input number to be zero-padded.
        length: Desired length of the output string.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ZeropadOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(ZEROPAD_METADATA)
    cargs = []
    cargs.append("zeropad")
    cargs.append(input_number)
    cargs.append(str(length))
    ret = ZeropadOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file("padded_output.txt"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "ZEROPAD_METADATA",
    "ZeropadOutputs",
    "zeropad",
]
