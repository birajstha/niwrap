# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

PRELUDE_METADATA = Metadata(
    id="fd9cde043bdaf94f2cf06ab8738d94f91bf7460b",
    name="prelude",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="mcin/docker-fsl:latest",
)


class PreludeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `prelude(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    unwrapped_phase_output: OutputPathType
    """Unwrapped phase output file"""
    saved_mask_volume: OutputPathType | None
    """Saved mask volume file"""
    saved_raw_phase_output: OutputPathType | None
    """Saved raw phase output file"""
    saved_area_labels_output: OutputPathType | None
    """Saved area labels output file"""


def prelude(
    output_unwrap: InputPathType,
    output_unwrap_alias: InputPathType,
    complex_phase: InputPathType | None = None,
    complex_phase_alias: InputPathType | None = None,
    absolute_volume: InputPathType | None = None,
    absolute_volume_alias: InputPathType | None = None,
    phase_volume: InputPathType | None = None,
    phase_volume_alias: InputPathType | None = None,
    num_phase_split: float | int | None = None,
    label_slices: bool = False,
    slice_processing: bool = False,
    slice_processing_alias: bool = False,
    force_3d: bool = False,
    force_3d_alias: bool = False,
    threshold: float | int | None = None,
    threshold_alias: float | int | None = None,
    mask_volume: InputPathType | None = None,
    mask_volume_alias: InputPathType | None = None,
    start_image: float | int | None = None,
    end_image: float | int | None = None,
    save_mask: InputPathType | None = None,
    save_raw_phase: InputPathType | None = None,
    save_raw_phase_alias: InputPathType | None = None,
    save_labels: InputPathType | None = None,
    save_labels_alias: InputPathType | None = None,
    remove_ramps: bool = False,
    verbose: bool = False,
    verbose_alias: bool = False,
    help_: bool = False,
    help_alias: bool = False,
    runner: Runner | None = None,
) -> PreludeOutputs:
    """
    prelude by University of Oxford (Mark Jenkinson).
    
    Phase Region Expanding Labeller for Unwrapping Discrete Estimates.
    
    More information: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/PRELUDE
    
    Args:
        output_unwrap: Filename for saving the unwrapped phase output.
        output_unwrap_alias: Filename for saving the unwrapped phase output.
        complex_phase: Filename of complex phase input volume.
        complex_phase_alias: Filename of complex phase input volume.
        absolute_volume: Filename of absolute input volume.
        absolute_volume_alias: Filename of absolute input volume.
        phase_volume: Filename of raw phase input volume.
        phase_volume_alias: Filename of raw phase input volume.
        num_phase_split: Number of phase partitions to use.
        label_slices: Does label processing in 2D (slice at a time).
        slice_processing: Does all processing in 2D (slice at a time).
        slice_processing_alias: Does all processing in 2D (slice at a time).
        force_3d: Forces all processing to be full 3D.
        force_3d_alias: Forces all processing to be full 3D.
        threshold: Intensity threshold for masking.
        threshold_alias: Intensity threshold for masking.
        mask_volume: Filename of mask input volume.
        mask_volume_alias: Filename of mask input volume.
        start_image: First image number to process (default 0).
        end_image: Final image number to process (default Inf).
        save_mask: Filename for saving the mask volume.
        save_raw_phase: Filename for saving the raw phase output.
        save_raw_phase_alias: Filename for saving the raw phase output.
        save_labels: Filename for saving the area labels output.
        save_labels_alias: Filename for saving the area labels output.
        remove_ramps: Remove phase ramps during unwrapping.
        verbose: Switch on diagnostic messages.
        verbose_alias: Switch on diagnostic messages.
        help_: Display help message.
        help_alias: Display help message.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PreludeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PRELUDE_METADATA)
    cargs = []
    cargs.append("prelude")
    cargs.append("[1")
    cargs.append("or")
    cargs.append("more]")
    cargs.append("[OPTIONS]")
    ret = PreludeOutputs(
        root=execution.output_file("."),
        unwrapped_phase_output=execution.output_file(f"{pathlib.Path(output_unwrap).name}.nii.gz"),
        saved_mask_volume=execution.output_file(f"{pathlib.Path(save_mask).name}.nii.gz", optional=True) if save_mask is not None else None,
        saved_raw_phase_output=execution.output_file(f"{pathlib.Path(save_raw_phase).name}.nii.gz", optional=True) if save_raw_phase is not None else None,
        saved_area_labels_output=execution.output_file(f"{pathlib.Path(save_labels).name}.nii.gz", optional=True) if save_labels is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "PRELUDE_METADATA",
    "PreludeOutputs",
    "prelude",
]
