# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

PERFUSION_SUBTRACT_METADATA = Metadata(
    id="b66442b50cecb9bf62ce2049020c5dfec2522b89",
    name="perfusion_subtract",
)


class PerfusionSubtractOutputs(typing.NamedTuple):
    """
    Output object returned when calling `perfusion_subtract(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output 4D image with subtraction results"""


def perfusion_subtract(
    four_d_input: InputPathType,
    four_d_output: str,
    control_first_flag: bool = False,
    runner: Runner = None,
) -> PerfusionSubtractOutputs:
    """
    perfusion_subtract.
    
    Subtract control images from tag images in 4D perfusion data.
    
    Args:
        four_d_input: Input 4D perfusion image (e.g. perfusion.nii.gz).
        four_d_output: Output 4D image with subtraction results (e.g.\
            perfusion_subtracted.nii.gz).
        control_first_flag: First timepoint is control instead of tag. Default\
            is tag first.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PerfusionSubtractOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PERFUSION_SUBTRACT_METADATA)
    cargs = []
    cargs.append("perfusion_subtract")
    cargs.append(execution.input_file(four_d_input))
    cargs.append(four_d_output)
    if control_first_flag:
        cargs.append("-c")
    ret = PerfusionSubtractOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"{four_d_output}.nii.gz"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "PERFUSION_SUBTRACT_METADATA",
    "PerfusionSubtractOutputs",
    "perfusion_subtract",
]
