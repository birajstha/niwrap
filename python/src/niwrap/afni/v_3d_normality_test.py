# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_NORMALITY_TEST_METADATA = Metadata(
    id="fb76fe92ed8e98142f9271144c390c3138eb6b75",
    name="3dNormalityTest",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni:latest",
)


class V3dNormalityTestOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_normality_test(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_dataset: OutputPathType
    """Output dataset with results"""


def v_3d_normality_test(
    input_: InputPathType,
    prefix: str,
    noexp: bool = False,
    pval: bool = False,
    runner: Runner | None = None,
) -> V3dNormalityTestOutputs:
    """
    3dNormalityTest by The Ghost of Carl Friedrich Gauss.
    
    This program tests the input values at each voxel for normality using the
    Anderson-Darling method.
    
    More information: http://afni.nimh.nih.gov
    
    Args:
        input_: Specifies the input dataset.
        prefix: Specifies the name for the output dataset.
        noexp: Do not convert the A-D statistic to an exponentially distributed\
            value.
        pval: Output the results as a pure (estimated) p-value.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dNormalityTestOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_NORMALITY_TEST_METADATA)
    cargs = []
    cargs.append("3dNormalityTest")
    cargs.append(execution.input_file(input_))
    cargs.append("-prefix")
    cargs.extend(["-prefix", prefix])
    if noexp:
        cargs.append("-noexp")
    if pval:
        cargs.append("-pval")
    ret = V3dNormalityTestOutputs(
        root=execution.output_file("."),
        output_dataset=execution.output_file(f"{prefix}+orig.*"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dNormalityTestOutputs",
    "V_3D_NORMALITY_TEST_METADATA",
    "v_3d_normality_test",
]
