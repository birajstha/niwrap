# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_DJUNCT_MONTAGE_COORDINATOR_METADATA = Metadata(
    id="169b3a3fb4adbe0a20fcd359028d265acee28bee",
    name="@djunct_montage_coordinator",
)


class DjunctMontageCoordinatorOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_djunct_montage_coordinator(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_coords: OutputPathType
    """Output coordinates (IJK or XYZ) for the montage setup."""


def _djunct_montage_coordinator(
    input_file: InputPathType,
    montx: float | int,
    monty: float | int,
    out_ijk: bool = False,
    out_xyz: bool = False,
    help_: bool = False,
    version: bool = False,
    runner: Runner | None = None,
) -> DjunctMontageCoordinatorOutputs:
    """
    @djunct_montage_coordinator by PA Taylor (NIMH, NIH, USA).
    
    Small program to calculate how to evenly space a certain number of slices
    within each view plane of a dataset.
    
    Args:
        input_file: Name of input dataset.
        montx: Montage dimension: number of panels along x-axis (i.e., number\
            of cols).
        monty: Montage dimension: number of panels along y-axis (i.e., number\
            of rows).
        out_ijk: Make program output 'I J K' values.
        out_xyz: Make program output 'X Y Z' values.
        help_: See helpfile.
        version: See version number.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DjunctMontageCoordinatorOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_DJUNCT_MONTAGE_COORDINATOR_METADATA)
    cargs = []
    cargs.append("@djunct_montage_coordinator")
    cargs.extend(["-inset", execution.input_file(input_file)])
    cargs.extend(["-montx", str(montx)])
    cargs.extend(["-monty", str(monty)])
    if out_xyz:
        cargs.append("-out_xyz")
    if help_:
        cargs.append("-help")
    if version:
        cargs.append("-ver")
    ret = DjunctMontageCoordinatorOutputs(
        root=execution.output_file("."),
        output_coords=execution.output_file(f"output.txt", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "DjunctMontageCoordinatorOutputs",
    "_DJUNCT_MONTAGE_COORDINATOR_METADATA",
    "_djunct_montage_coordinator",
]
