# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_GET_AFNI_VIEW_METADATA = Metadata(
    id="182196a4d6a5fcbde37e11c7ba0fc95d76a76518",
    name="@GetAfniView",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni:latest",
)


class GetAfniViewOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_get_afni_view(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    afni_view: OutputPathType
    """The AFNI view extension retrieved from the dataset name"""


def _get_afni_view(
    dataset_name: str,
    runner: Runner | None = None,
) -> GetAfniViewOutputs:
    """
    @GetAfniView by Ziad Saad.
    
    A tool to retrieve the AFNI view of a given dataset name.
    
    More information: https://afni.nimh.nih.gov/pub/dist/doc/htmldoc/index.html
    
    Args:
        dataset_name: Name of the dataset (including path) from which to\
            retrieve the AFNI view (+orig, +acpc, etc.).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GetAfniViewOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_GET_AFNI_VIEW_METADATA)
    cargs = []
    cargs.append("@GetAfniView")
    cargs.append(dataset_name)
    ret = GetAfniViewOutputs(
        root=execution.output_file("."),
        afni_view=execution.output_file(f"view_extension.txt"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "GetAfniViewOutputs",
    "_GET_AFNI_VIEW_METADATA",
    "_get_afni_view",
]
