# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

CAT_MATVEC_METADATA = Metadata(
    id="b48e124bb64b3f9e7012737747d7ca2f6ebc0ddd",
    name="cat_matvec",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class CatMatvecOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cat_matvec(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def cat_matvec(
    matvec_spec: list[str],
    matrix_format: bool = False,
    oneline_format: bool = False,
    four_by_four_format: bool = False,
    runner: Runner | None = None,
) -> CatMatvecOutputs:
    """
    cat_matvec by AFNI Team.
    
    Catenates 3D rotation+shift matrix+vector transformations.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/cat_matvec.html
    
    Args:
        matvec_spec: Specifies the matrix transformation. Can take forms\
            described in the documentation.
        matrix_format: Indicates that the resulting matrix will be written in\
            the 'MATRIX(...)' format (FORM 3).
        oneline_format: Option indicates that the resulting matrix will simply\
            be written as 12 numbers on one line.
        four_by_four_format: Output matrix in augmented form (last row is 0 0 0\
            1). This option does not work with -MATRIX or -ONELINE.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `CatMatvecOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(CAT_MATVEC_METADATA)
    cargs = []
    cargs.append("cat_matvec")
    if four_by_four_format:
        cargs.append("-4x4")
    cargs.extend(matvec_spec)
    ret = CatMatvecOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "CAT_MATVEC_METADATA",
    "CatMatvecOutputs",
    "cat_matvec",
]
