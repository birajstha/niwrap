# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

IMAVER_METADATA = Metadata(
    id="afddf56a8f0e6dd2b5e03c86245e924a6d684293",
    name="imaver",
)


class ImaverOutputs(typing.NamedTuple):
    """
    Output object returned when calling `imaver(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    out_ave_output: OutputPathType | None
    """Output image file for averages (optional)"""
    out_sig_output: OutputPathType | None
    """Output image file for standard deviations (optional)"""


def imaver(
    input_images: list[InputPathType],
    out_ave: str | None = None,
    out_sig: str | None = None,
    runner: Runner | None = None,
) -> ImaverOutputs:
    """
    imaver by Unknown.
    
    Computes the mean and standard deviation, pixel-by-pixel, of a whole bunch
    of images.
    
    Args:
        input_images: Input image files for processing.
        out_ave: Output average image file. Use '-' to skip output.
        out_sig: Output standard deviation image file. Use '-' to skip output.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ImaverOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(IMAVER_METADATA)
    cargs = []
    cargs.append("imaver")
    if out_ave is not None:
        cargs.append(out_ave)
    if out_sig is not None:
        cargs.append(out_sig)
    cargs.extend([execution.input_file(f) for f in input_images])
    ret = ImaverOutputs(
        root=execution.output_file("."),
        out_ave_output=execution.output_file(f"{out_ave}", optional=True) if out_ave is not None else None,
        out_sig_output=execution.output_file(f"{out_sig}", optional=True) if out_sig is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "IMAVER_METADATA",
    "ImaverOutputs",
    "imaver",
]
