# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

UBER_SUBJECT_PY_METADATA = Metadata(
    id="5fc47a6e79687e4fcf65b257c1df6aef017c2d16",
    name="uber_subject.py",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class UberSubjectPyOutputs(typing.NamedTuple):
    """
    Output object returned when calling `uber_subject_py(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def uber_subject_py(
    qt_opts: str | None = None,
    svar: str | None = None,
    cvar: str | None = None,
    no_gui: bool = False,
    print_ap_command: bool = False,
    save_ap_command: str | None = None,
    exec_ap_command: bool = False,
    exec_proc_script: bool = False,
    align_cost: str | None = None,
    align_giant_move: str | None = None,
    align_opts_aea: str | None = None,
    anal_domain: str | None = None,
    anal_type: str | None = None,
    anat: InputPathType | None = None,
    anat_has_skull: str | None = None,
    blocks: str | None = None,
    blur_size: float | int | None = None,
    epi: str | None = None,
    epi_wildcard: str | None = None,
    gid: str | None = None,
    gltsym: str | None = None,
    gltsym_label: str | None = None,
    motion_limit: float | int | None = None,
    outlier_limit: float | int | None = None,
    regress_goforit: float | int | None = None,
    regress_bandpass: str | None = None,
    regress_jobs: float | int | None = None,
    regress_mot_deriv: str | None = None,
    regress_opts_3d_d: str | None = None,
    reml_exec: str | None = None,
    run_clustsim: str | None = None,
    sid: str | None = None,
    stim: InputPathType | None = None,
    stim_basis: str | None = None,
    stim_label: str | None = None,
    stim_type: str | None = None,
    stim_wildcard: str | None = None,
    tcat_nfirst: float | int | None = None,
    tlrc_base: str | None = None,
    tlrc_ok_maxite: str | None = None,
    tlrc_opts_at: str | None = None,
    volreg_base: str | None = None,
    verb: str | None = None,
    runner: Runner | None = None,
) -> UberSubjectPyOutputs:
    """
    uber_subject.py by AFNI Team.
    
    Graphical interface to afni_proc.py.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/uber_subject.py.html
    
    Args:
        qt_opts: Pass options to PyQt4.
        svar: Set subject variable to value.
        cvar: Set control variable to value.
        no_gui: Do not open graphical interface.
        print_ap_command: Show afni_proc.py script.
        save_ap_command: Save afni_proc.py script.
        exec_ap_command: Run afni_proc.py command.
        exec_proc_script: Run proc script.
        align_cost: Specify cost function for anat/EPI alignment.
        align_giant_move: Use -giant_move in AEA.py.
        align_opts_aea: Specify extra options for align_epi_anat.py.
        anal_domain: Set data domain (volume/rest).
        anal_type: Set analysis type (task/rest).
        anat: Set anatomical dataset name.
        anat_has_skull: Whether anat has skull (yes/no).
        blocks: Set list of processing blocks to apply.
        blur_size: Set blur size in mm.
        epi: Set list of EPI datasets.
        epi_wildcard: Use wildcard for EPI datasets (yes/no).
        gid: Set group ID.
        gltsym: Specify list of symbolic GLTs.
        gltsym_label: Set corresponding GLT labels.
        motion_limit: Set per-TR motion limit in mm.
        outlier_limit: Specify outlier limit for censoring.
        regress_goforit: Set GOFORIT level in 3dDeconvolve.
        regress_bandpass: Specify bandpass limits to remain after regress.
        regress_jobs: Number of jobs to use in 3dDeconvolve.
        regress_mot_deriv: Regress motion derivatives (yes/no).
        regress_opts_3d_d: Specify extra options for 3dDeconvolve.
        reml_exec: Run 3dREMLfit (yes/no).
        run_clustsim: Run 3dClustSim (yes/no).
        sid: Set subject ID.
        stim: Set list of stim timing files.
        stim_basis: Set basis functions for stim classes.
        stim_label: Set stim file labels.
        stim_type: Set stim types for stim classes.
        stim_wildcard: Use wildcard for stim files (yes/no).
        tcat_nfirst: Set number of TRs to remove per run.
        tlrc_base: Specify anat for standard space alignment.
        tlrc_ok_maxite: Pass -OK_maxite to @auto_tlrc (yes/no).
        tlrc_opts_at: Specify extra options for @auto_tlrc.
        volreg_base: Set volreg base string (first/third/last).
        verb: Set verbose level.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `UberSubjectPyOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(UBER_SUBJECT_PY_METADATA)
    cargs = []
    cargs.append("uber_subject.py")
    cargs.append("[OPTIONAL_ARGS]")
    ret = UberSubjectPyOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "UBER_SUBJECT_PY_METADATA",
    "UberSubjectPyOutputs",
    "uber_subject_py",
]
