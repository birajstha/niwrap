# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

GLTSYMTEST_METADATA = Metadata(
    id="14642d91e7a7cbf0ce4e5101325c1aba7af0d4c5",
    name="GLTsymtest",
)


class GltsymtestOutputs(typing.NamedTuple):
    """
    Output object returned when calling `gltsymtest(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def gltsymtest(
    varlist: str,
    expr: list[str],
    badonly: bool = False,
    runner: Runner | None = None,
) -> GltsymtestOutputs:
    """
    GLTsymtest by RWCox.
    
    A tool to test the validity of '-gltsym' strings for use with 3dDeconvolve
    or 3dREMLfit.
    
    Args:
        varlist: A list of allowed variable names in the expression, separated\
            by commas, semicolons, and/or spaces.
        expr: GLT symbolic expression(s), enclosed in quotes.
        badonly: A flag to only output BAD messages rather than all messages.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GltsymtestOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(GLTSYMTEST_METADATA)
    cargs = []
    cargs.append("GLTsymtest")
    if badonly:
        cargs.append("-badonly")
    cargs.append(varlist)
    cargs.extend(expr)
    ret = GltsymtestOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "GLTSYMTEST_METADATA",
    "GltsymtestOutputs",
    "gltsymtest",
]
