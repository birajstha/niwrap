# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

PARSE_NAME_METADATA_ = Metadata(
    id="3147e545e3c1de045c7cb8d1040e88621574619e.boutiques",
    name="parse_name",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class ParseNameOutputs_(typing.NamedTuple):
    """
    Output object returned when calling `parse_name_(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_path: OutputPathType
    """The path of the filename"""
    output_prefix: OutputPathType
    """The prefix of the filename"""
    output_extension: OutputPathType
    """The extension of the filename"""


def parse_name_(
    name: str,
    runner: Runner | None = None,
) -> ParseNameOutputs_:
    """
    A script to parse a filename into path, prefix, and extension strings.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        name: The filename to parse.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ParseNameOutputs_`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PARSE_NAME_METADATA_)
    cargs = []
    cargs.append("parse_name")
    cargs.append(name)
    ret = ParseNameOutputs_(
        root=execution.output_file("."),
        output_path=execution.output_file(name + "_path"),
        output_prefix=execution.output_file(name + "_prefix"),
        output_extension=execution.output_file(name + "_extension"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "PARSE_NAME_METADATA_",
    "ParseNameOutputs_",
    "parse_name_",
]
