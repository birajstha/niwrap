# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_VOL_CENTER_METADATA = Metadata(
    id="f002ad42baa635e8ffc0f31d96d3b3410181eb68",
    name="@VolCenter",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class VolCenterOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_vol_center(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def _vol_center(
    dset: InputPathType,
    orient: str | None = None,
    runner: Runner | None = None,
) -> VolCenterOutputs:
    """
    @VolCenter by AFNI Team.
    
    Tool to return the center of volume for a given dataset.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@VolCenter.html
    
    Args:
        dset: Input volume dataset.
        orient: Output coordinate system orientation (e.g., RAI).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VolCenterOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_VOL_CENTER_METADATA)
    cargs = []
    cargs.append("@VolCenter")
    cargs.append("<-dset")
    cargs.append("DSET>")
    cargs.append("[-or")
    cargs.append("ORIENT]")
    ret = VolCenterOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VolCenterOutputs",
    "_VOL_CENTER_METADATA",
    "_vol_center",
]
