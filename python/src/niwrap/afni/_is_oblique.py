# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_IS_OBLIQUE_METADATA = Metadata(
    id="f5ddb8aeae2209fb8e59f1557cf1e126e8b6163c",
    name="@isOblique",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="your_docker_image:latest",
)


class IsObliqueOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_is_oblique(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    result: OutputPathType
    """Output result indicating if the file is oblique or plumb"""


def _is_oblique(
    infile: InputPathType,
    runner: Runner | None = None,
) -> IsObliqueOutputs:
    """
    @isOblique by Ziad Saad.
    
    Determine if a file is oblique or plumb.
    
    More information: mailto:saadz@mail.nih.gov
    
    Args:
        infile: Input file (e.g., Hello+orig.HEAD).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `IsObliqueOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_IS_OBLIQUE_METADATA)
    cargs = []
    cargs.append("@isOblique")
    cargs.append(execution.input_file(infile))
    ret = IsObliqueOutputs(
        root=execution.output_file("."),
        result=execution.output_file(f"oblique_check_result.txt"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "IsObliqueOutputs",
    "_IS_OBLIQUE_METADATA",
    "_is_oblique",
]
