# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_NWARP_XYZ_METADATA = Metadata(
    id="879b8eeabb83eabf5c04d0d5afda34111cf7e0b5",
    name="3dNwarpXYZ",
)


class V3dNwarpXyzOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_nwarp_xyz(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Warped XYZ coordinates output file"""


def v_3d_nwarp_xyz(
    xyzfile: InputPathType,
    warp_spec: str,
    iwarp: bool = False,
    runner: Runner | None = None,
) -> V3dNwarpXyzOutputs:
    """
    3dNwarpXYZ by Zhark the Coordinated.
    
    Transforms the DICOM xyz coordinates in the input XYZfile.1D based on
    specified warp.
    
    More information: https://afni.nimh.nih.gov
    
    Args:
        xyzfile: XYZ coordinate file containing 3 columns.
        warp_spec: Warp specification as in 3dNwarpApply.
        iwarp: Compute the inverse warp for each input (x,y,z) triple.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dNwarpXyzOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_NWARP_XYZ_METADATA)
    cargs = []
    cargs.append("3dNwarpXYZ")
    cargs.append("[OPTIONS]")
    cargs.append("-nwarp")
    cargs.append("[WARP_SPEC]")
    cargs.append(execution.input_file(xyzfile))
    cargs.append(">")
    cargs.append("[OUTPUT_FILE]")
    ret = V3dNwarpXyzOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"[OUTPUT_FILE]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dNwarpXyzOutputs",
    "V_3D_NWARP_XYZ_METADATA",
    "v_3d_nwarp_xyz",
]
