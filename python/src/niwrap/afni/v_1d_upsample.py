# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_1D_UPSAMPLE_METADATA = Metadata(
    id="6f41f59cf5032f56c445a4744a64898457ba6194",
    name="1dUpsample",
)


class V1dUpsampleOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_1d_upsample(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Upsampled 1D time series output"""


def v_1d_upsample(
    upsample_factor: float | int,
    input_file: InputPathType,
    linear_interpolation: bool = False,
    runner: Runner | None = None,
) -> V1dUpsampleOutputs:
    """
    1dUpsample by Unknown.
    
    Upsamples a 1D time series to a finer time grid.
    
    Args:
        upsample_factor: Upsample factor (integer from 2..32).
        input_file: Input 1D time series file.
        linear_interpolation: Use 1st order polynomials (i.e., linear\
            interpolation) instead of 7th order polynomials.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V1dUpsampleOutputs`).
    """
    runner = runner or get_global_runner()
    if not (2 <= upsample_factor <= 32): 
        raise ValueError(f"'upsample_factor' must be between 2 <= x <= 32 but was {upsample_factor}")
    execution = runner.start_execution(V_1D_UPSAMPLE_METADATA)
    cargs = []
    cargs.append("1dUpsample")
    cargs.append(str(upsample_factor))
    cargs.append(execution.input_file(input_file))
    if linear_interpolation:
        cargs.append("-one")
    ret = V1dUpsampleOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"ethel.1D"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V1dUpsampleOutputs",
    "V_1D_UPSAMPLE_METADATA",
    "v_1d_upsample",
]
