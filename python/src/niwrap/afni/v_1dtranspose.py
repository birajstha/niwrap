# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_1DTRANSPOSE_METADATA = Metadata(
    id="1f6ac89b1fd4fc611cd4c2ce399218fd8fe49f6a",
    name="1dtranspose",
)


class V1dtransposeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_1dtranspose(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    outfile: OutputPathType | None
    """Transposed output file"""


def v_1dtranspose(
    infile: InputPathType,
    outfile: str | None = None,
    runner: Runner | None = None,
) -> V1dtransposeOutputs:
    """
    1dtranspose by AFNI Development Team.
    
    Transpose an AFNI *.1D file (ASCII list of numbers arranged in columns).
    
    More information: https://afni.nimh.nih.gov/
    
    Args:
        infile: Input file (e.g. data.1D).
        outfile: Output file (e.g. transposed_data.1D), or '-' to write to\
            stdout.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V1dtransposeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_1DTRANSPOSE_METADATA)
    cargs = []
    cargs.append("1dtranspose")
    cargs.append(execution.input_file(infile))
    if outfile is not None:
        cargs.append(outfile)
    ret = V1dtransposeOutputs(
        root=execution.output_file("."),
        outfile=execution.output_file(f"{outfile}") if outfile is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V1dtransposeOutputs",
    "V_1DTRANSPOSE_METADATA",
    "v_1dtranspose",
]
