# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_SNAPSHOT_VOLREG_METADATA = Metadata(
    id="de57989a9b16d233a1c93f121bdb599525f7b3de",
    name="@snapshot_volreg",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class SnapshotVolregOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_snapshot_volreg(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_jpeg: OutputPathType | None
    """JPEG image showing the edges of the EPI dataset overlayed on the anatomical dataset"""


def _snapshot_volreg(
    anatdataset: InputPathType,
    epidataset: InputPathType,
    jname: str | None = None,
    xdisplay: str | None = None,
    runner: Runner | None = None,
) -> SnapshotVolregOutputs:
    """
    @snapshot_volreg by AFNI Team.
    
    Create a JPEG image showing the edges of an EPI dataset overlayed on an
    anatomical dataset to judge 3D registration quality.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@snapshot_volreg.html
    
    Args:
        anatdataset: Anatomical dataset file.
        epidataset: EPI dataset file.
        jname: Name for the output JPEG file.
        xdisplay: Display number of an already running Xvfb instance.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SnapshotVolregOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_SNAPSHOT_VOLREG_METADATA)
    cargs = []
    cargs.append("@snapshot_volreg")
    cargs.append(execution.input_file(anatdataset))
    cargs.append(execution.input_file(epidataset))
    if jname is not None:
        cargs.append(jname)
    if xdisplay is not None:
        cargs.append(xdisplay)
    ret = SnapshotVolregOutputs(
        root=execution.output_file("."),
        output_jpeg=execution.output_file(f"{jname}.jpg") if jname is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SnapshotVolregOutputs",
    "_SNAPSHOT_VOLREG_METADATA",
    "_snapshot_volreg",
]
