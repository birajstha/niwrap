# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

CONVEX_HULL_METADATA = Metadata(
    id="12b659ad10c8e6ad3e14c1231865d0a03fab2d23.boutiques",
    name="ConvexHull",
    package="afni",
    container_image_tag="fcpindi/c-pac:latest",
)


class ConvexHullOutputs(typing.NamedTuple):
    """
    Output object returned when calling `convex_hull(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    out_surf: OutputPathType
    """Output surface file"""


def convex_hull(
    runner: Runner | None = None,
) -> ConvexHullOutputs:
    """
    A program to find the convex hull, or perform a Delaunay triangulation of a set
    of points.
    
    Author: AFNI Team
    
    URL: https://afni.nimh.nih.gov/pub/dist/doc/program_help/ConvexHull.html
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ConvexHullOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(CONVEX_HULL_METADATA)
    cargs = []
    cargs.append("<main_flags>")
    cargs.append("<volume_flags>")
    cargs.append("<surface_flags>")
    cargs.append("<triangulation_flags>")
    cargs.append("<output_flags>")
    cargs.append("<debug_flags>")
    cargs.append("<global_flags>")
    ret = ConvexHullOutputs(
        root=execution.output_file("."),
        out_surf=execution.output_file("[O_PREFIX]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "CONVEX_HULL_METADATA",
    "ConvexHullOutputs",
    "convex_hull",
]
