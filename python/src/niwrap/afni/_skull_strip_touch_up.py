# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_SKULL_STRIP_TOUCH_UP_METADATA = Metadata(
    id="56e714d56057c417f7a6b1cccb9f4c0277a3e33e",
    name="@SkullStrip_TouchUp",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class SkullStripTouchUpOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_skull_strip_touch_up(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_folder: OutputPathType
    """Output folder containing the touch-up results"""
    output_mask: OutputPathType
    """Output binary mask (if -mask_out flag is used)"""


def _skull_strip_touch_up(
    prefix: str,
    brain_dataset: InputPathType,
    head_dataset: InputPathType,
    mask_out: bool = False,
    orig_dim: bool = False,
    help_: bool = False,
    runner: Runner | None = None,
) -> SkullStripTouchUpOutputs:
    """
    @SkullStrip_TouchUp by AFNI Team.
    
    Helper program to touch up failed skull stripping by resampling data,
    allowing manual edits, and outputting corrected data.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@SkullStrip_TouchUp.html
    
    Args:
        prefix: Output file and folder name.
        brain_dataset: Skull stripped data set to touch up.
        head_dataset: Whole head anatomical data set.
        mask_out: Output a binary mask in addition to actual data.
        orig_dim: Edit in the original image dimensions.
        help_: Show this help message.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SkullStripTouchUpOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_SKULL_STRIP_TOUCH_UP_METADATA)
    cargs = []
    cargs.append("@SkullStrip_TouchUp")
    cargs.append("-prefix")
    cargs.append(prefix)
    cargs.append("-brain")
    cargs.append(execution.input_file(brain_dataset))
    cargs.append("-head")
    cargs.append(execution.input_file(head_dataset))
    if mask_out:
        cargs.append("-mask_out")
    if orig_dim:
        cargs.append("-orig_dim")
    ret = SkullStripTouchUpOutputs(
        root=execution.output_file("."),
        output_folder=execution.output_file(f"{prefix}_SS_touch_up"),
        output_mask=execution.output_file(f"{prefix}_mask.nii.gz", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SkullStripTouchUpOutputs",
    "_SKULL_STRIP_TOUCH_UP_METADATA",
    "_skull_strip_touch_up",
]
