# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_AFNITO_NIML_METADATA = Metadata(
    id="eb53445b479b1ace904cfacf2510ba202f9b77d6",
    name="3dAFNItoNIML",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni_latest",
)


class V3dAfnitoNimlOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_afnito_niml(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v_3d_afnito_niml(
    dset: InputPathType,
    data: bool = False,
    ascii_: bool = False,
    tcp: str | None = None,
    runner: Runner | None = None,
) -> V3dAfnitoNimlOutputs:
    """
    3dAFNItoNIML by RWCox.
    
    Dumps AFNI dataset header information to stdout in NIML format. Mostly for
    debugging and testing purposes!.
    
    Args:
        dset: AFNI dataset.
        data: Also put the data into the output (will be huge).
        ascii_: Format in ASCII, not binary (even huger).
        tcp: Instead of stdout, send the dataset to a socket. Implies '-data'\
            as well.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dAfnitoNimlOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_AFNITO_NIML_METADATA)
    cargs = []
    cargs.append("3dAFNItoNIML")
    cargs.append("[OPTIONS]")
    cargs.append(execution.input_file(dset))
    ret = V3dAfnitoNimlOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dAfnitoNimlOutputs",
    "V_3D_AFNITO_NIML_METADATA",
    "v_3d_afnito_niml",
]
