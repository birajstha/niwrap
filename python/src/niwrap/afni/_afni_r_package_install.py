# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

AFNI_R_PACKAGE_INSTALL_METADATA = Metadata(
    id="98b19d9eb5b437ac72ddfdfbf3c832c5513c5154",
    name="afni_R_package_install",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class AfniRPackageInstallOutputs(typing.NamedTuple):
    """
    Output object returned when calling `afni_r_package_install(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    install_log: OutputPathType
    """A log file listing all installed R packages."""


def afni_r_package_install(
    afni: bool = False,
    shiny: bool = False,
    bayes_view: bool = False,
    circos: bool = False,
    custom_packages: str | None = None,
    mirror: str | None = None,
    help_: bool = False,
    runner: Runner | None = None,
) -> AfniRPackageInstallOutputs:
    """
    afni_R_package_install by AFNI Team.
    
    Helper script to install R packages for various afni-ish purposes.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@afni_R_package_install.html
    
    Args:
        afni: Install AFNI related R packages.
        shiny: Install AFNI related shiny app packages.
        bayes_view: Install R packages for bayes_view.
        circos: Install OmicCircos for FATCAT_matplot.
        custom_packages: Install custom R packages (space-separated list). Must\
            start and end with double quotes.
        mirror: Set the CRAN mirror to a custom URL.
        help_: Show help message.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `AfniRPackageInstallOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(AFNI_R_PACKAGE_INSTALL_METADATA)
    cargs = []
    cargs.append("@afni_R_package_install")
    if afni:
        cargs.append("-afni")
    if shiny:
        cargs.append("-shiny")
    if bayes_view:
        cargs.append("-bayes_view")
    if circos:
        cargs.append("-circos")
    if custom_packages is not None:
        cargs.extend(["-custom", custom_packages])
    if mirror is not None:
        cargs.extend(["-mirror", mirror])
    if help_:
        cargs.append("-help")
    ret = AfniRPackageInstallOutputs(
        root=execution.output_file("."),
        install_log=execution.output_file(f"R_packages_installed.txt", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "AFNI_R_PACKAGE_INSTALL_METADATA",
    "AfniRPackageInstallOutputs",
    "afni_r_package_install",
]
