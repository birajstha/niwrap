# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_RETINO_PHASE_METADATA = Metadata(
    id="8b7823c7b1893b982c57dcc65247e792c8ca2653",
    name="3dRetinoPhase",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dRetinoPhaseOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_retino_phase(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    ecc_plus: OutputPathType
    """Output file for positive (expanding) eccentricity"""
    ecc_minus: OutputPathType
    """Output file for negative (contracting) eccentricity"""
    pol_plus: OutputPathType
    """Output file for clockwise polar angle mapping"""
    pol_minus: OutputPathType
    """Output file for counterclockwise polar angle mapping"""


def v_3d_retino_phase(
    prefix: str,
    dataset: InputPathType,
    exp: str | None = None,
    con: str | None = None,
    clw: str | None = None,
    ccw: str | None = None,
    spectra: bool = False,
    tstim: float | int | None = None,
    nrings: float | int | None = None,
    nwedges: float | int | None = None,
    ort_adjust: float | int | None = None,
    pre_stim: float | int | None = None,
    sum_adjust: str | None = None,
    phase_estimate: str | None = None,
    ref_ts: InputPathType | None = None,
    multi_ref_ts: InputPathType | None = None,
    runner: Runner | None = None,
) -> V3dRetinoPhaseOutputs:
    """
    3dRetinoPhase by AFNI Team.
    
    Process time series from retinotopy stimuli to create phase datasets and
    visual field angle datasets.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dRetinoPhase.html
    
    Args:
        prefix: Prefix of output datasets.
        dataset: Time series from a retinotopy stimulus.
        exp: Expanding rings stimulus.
        con: Contracting rings stimulus.
        clw: Clockwise moving polar angle mapping stimulus.
        ccw: Counterclockwise moving polar angle mapping stimulus.
        spectra: Output amplitude and phase spectra datasets.
        tstim: Period of stimulus in seconds.
        nrings: Number of rings in the stimulus. Default is 1.
        nwedges: Number of wedges in the stimulus. Default is 1.
        ort_adjust: Number of DOF lost in detrending outside of this program.
        pre_stim: Blank period, in seconds, before stimulus began.
        sum_adjust: Adjust sum of angles for wrapping based on the angle\
            difference. Default is 'y'.
        phase_estimate: Method of phase estimation.
        ref_ts: 0 lag reference time series of response for DELAY phase\
            estimation method.
        multi_ref_ts: Multiple 0 lag reference time series. This allows you to\
            test multiple regressors.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dRetinoPhaseOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_RETINO_PHASE_METADATA)
    cargs = []
    cargs.append("3dRetinoPhase")
    cargs.append(prefix)
    cargs.append(execution.input_file(dataset))
    cargs.append("[OPTIONS]")
    ret = V3dRetinoPhaseOutputs(
        root=execution.output_file("."),
        ecc_plus=execution.output_file(f"[PREFIX].ecc+", optional=True),
        ecc_minus=execution.output_file(f"[PREFIX].ecc-", optional=True),
        pol_plus=execution.output_file(f"[PREFIX].pol+", optional=True),
        pol_minus=execution.output_file(f"[PREFIX].pol-", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dRetinoPhaseOutputs",
    "V_3D_RETINO_PHASE_METADATA",
    "v_3d_retino_phase",
]
