# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

CCALC_METADATA = Metadata(
    id="ee45554e01c31e5c53a7bbabb3553465a0061ffd",
    name="ccalc",
)


class CcalcOutputs(typing.NamedTuple):
    """
    Output object returned when calling `ccalc(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def ccalc(
    expr: str,
    format_: str | None = None,
    runner: Runner | None = None,
) -> CcalcOutputs:
    """
    ccalc by Unknown.
    
    Command line calculator with formatted output options.
    
    More information: https://example.com/ccalc
    
    Args:
        expr: Evaluate an expression specified on command line, return answer\
            and quit.
        format_: Format output in a nice form. Choose from 'double', 'nice',\
            'int', 'rint', 'cint', 'fint', or custom format string (e.g., %n.mf).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `CcalcOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(CCALC_METADATA)
    cargs = []
    cargs.append("ccalc")
    if format_ is not None:
        cargs.extend(["-form", format_])
    cargs.append("-eval")
    cargs.extend(["-eval", expr])
    ret = CcalcOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "CCALC_METADATA",
    "CcalcOutputs",
    "ccalc",
]
