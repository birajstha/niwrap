# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

ABIDS_JSON_TOOL_METADATA = Metadata(
    id="fafad902f464c0bb9da3c54bc3fbd0b2e65963e7",
    name="abids_json_tool",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class AbidsJsonToolOutputs(typing.NamedTuple):
    """
    Output object returned when calling `abids_json_tool(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def abids_json_tool(
    input_file: InputPathType,
    prefix: str,
    txt2json: bool = False,
    json2txt: bool = False,
    add_json: list[str] | None = None,
    del_json: str | None = None,
    force_add: bool = False,
    overwrite: bool = False,
    help_: bool = False,
    delimiter_major: str | None = None,
    delimiter_minor: str | None = None,
    literal_keys: bool = False,
    values_stay_str: bool = False,
    runner: Runner | None = None,
) -> AbidsJsonToolOutputs:
    """
    abids_json_tool by AFNI Team.
    
    This script helps to manipulate json files in various ways.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/abids_json_tool.py.html
    
    Args:
        input_file: One file to convert. Enter NULL with -add_json to create\
            new json file.
        prefix: Output file name.
        txt2json: Convert from ':' separated text file to json formatted file.
        json2txt: Convert from json formatted file to ':' separated text file.
        add_json: Add an attribute to the end of the specified json file.
        del_json: Remove attribute (KEY) from the -input json file.
        force_add: Use with -add_json to overwrite an existing attribute in the\
            specified json file.
        overwrite: Use caution as this will overwrite the -prefix file if it\
            exists!!.
        help_: Show this help and exit.
        delimiter_major: Specify the new (major) delimiter to separate keys and\
            values when using '-txt2json' opt.
        delimiter_minor: Specify the new (minor) delimiter to separate value\
            items when using '-txt2json' opt.
        literal_keys: Do not replace spaces with '_', nor parentheses and\
            brackets with ''.
        values_stay_str: Each numeric or str item gets saved as a str;\
            otherwise, guess at int and float.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `AbidsJsonToolOutputs`).
    """
    runner = runner or get_global_runner()
    if add_json is not None and not (1 <= len(add_json)): 
        raise ValueError(f"Length of 'add_json' must be greater than 1 but was {len(add_json)}")
    execution = runner.start_execution(ABIDS_JSON_TOOL_METADATA)
    cargs = []
    cargs.append("/opt/afni/src/../install/abids_json_tool.py")
    cargs.append("-input")
    cargs.append(execution.input_file(input_file))
    cargs.append("-prefix")
    cargs.append(prefix)
    if del_json is not None:
        cargs.extend(["-del_json", del_json])
    if values_stay_str:
        cargs.append("-values_stay_str")
    ret = AbidsJsonToolOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "ABIDS_JSON_TOOL_METADATA",
    "AbidsJsonToolOutputs",
    "abids_json_tool",
]
