# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

MYGET_METADATA = Metadata(
    id="eb1c30697cd3ec02c5b09b07fbf2667e12dfd4b1",
    name="myget",
)


class MygetOutputs(typing.NamedTuple):
    """
    Output object returned when calling `myget(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """The filename to save the downloaded file"""


def myget(
    url: str,
    protocol_version: typing.Literal["-1", "-1.1"] | None = None,
    runner: Runner | None = None,
) -> MygetOutputs:
    """
    myget.
    
    A simple file downloader from a URL.
    
    Args:
        url: The URL to download the file from.
        protocol_version: Specify protocol version. You can choose between -1\
            or -1.1.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MygetOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MYGET_METADATA)
    cargs = []
    cargs.append("myget")
    if protocol_version is not None:
        cargs.extend(["", protocol_version])
    cargs.extend(["", url])
    cargs.append(">")
    cargs.append("[OUTPUT_FILE]")
    ret = MygetOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"[OUTPUT_FILE]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MYGET_METADATA",
    "MygetOutputs",
    "myget",
]
