# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

GEN_SS_REVIEW_TABLE_METADATA = Metadata(
    id="7ec132d9cbb6ea4092f6a554ba9b8b681bb4deb9",
    name="gen_ss_review_table",
)


class GenSsReviewTableOutputs(typing.NamedTuple):
    """
    Output object returned when calling `gen_ss_review_table(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_table: OutputPathType | None
    """Final table output file"""
    output_outliers: OutputPathType | None
    """Outliers table output file"""


def gen_ss_review_table(
    infiles: list[InputPathType],
    write_table: InputPathType | None = None,
    write_outliers: InputPathType | None = None,
    overwrite: bool = False,
    empty_is_outlier: bool = False,
    outlier_sep: str | None = None,
    separator: str | None = None,
    showlabs: bool = False,
    show_infiles: bool = False,
    show_keepers: bool = False,
    report_outliers: list[str] | None = None,
    report_outliers_fill_style: str | None = None,
    show_missing: bool = False,
    verbosity: int | None = None,
    runner: Runner | None = None,
) -> GenSsReviewTableOutputs:
    """
    gen_ss_review_table by R Reynolds.
    
    Generate a table from ss_review_basic output files.
    
    Args:
        infiles: Input ss_review_basic output text files to process.
        write_table: Write final table to the given file.
        write_outliers: Write outlier table to the given file.
        overwrite: Overwrite the output -write_table, if it exists.
        empty_is_outlier: Treat empty tests as outliers.
        outlier_sep: Use SEP for the outlier table separator.
        separator: Use SEP for the label/vals separator (default = ':').
        showlabs: Display counts of all labels found, with parents.
        show_infiles: Include input files in reviewtable result.
        show_keepers: Show a table of subjects kept rather than dropped.
        report_outliers: Report outliers where the comparison holds.
        report_outliers_fill_style: How to fill non-outliers in the table.
        show_missing: Display all missing keys.
        verbosity: Verbosity level.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GenSsReviewTableOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(GEN_SS_REVIEW_TABLE_METADATA)
    cargs = []
    cargs.append("gen_ss_review_table.py")
    cargs.extend([execution.input_file(f) for f in infiles])
    if write_table is not None:
        cargs.extend(["-write_table", execution.input_file(write_table)])
    if write_outliers is not None:
        cargs.extend(["-write_outliers", execution.input_file(write_outliers)])
    if overwrite:
        cargs.append("-overwrite")
    if empty_is_outlier:
        cargs.append("-empty_is_outlier")
    if outlier_sep is not None:
        cargs.extend(["-outlier_sep", outlier_sep])
    if separator is not None:
        cargs.extend(["-separator", separator])
    if showlabs:
        cargs.append("-showlabs")
    if show_infiles:
        cargs.append("-show_infiles")
    if show_keepers:
        cargs.append("-show_keepers")
    if report_outliers is not None:
        cargs.extend(["-report_outliers", *report_outliers])
    if report_outliers_fill_style is not None:
        cargs.extend(["-report_outliers_fill_style", report_outliers_fill_style])
    if show_missing:
        cargs.append("-show_missing")
    if verbosity is not None:
        cargs.extend(["-verb", str(verbosity)])
    ret = GenSsReviewTableOutputs(
        root=execution.output_file("."),
        output_table=execution.output_file(f"{pathlib.Path(write_table).name}", optional=True) if write_table is not None else None,
        output_outliers=execution.output_file(f"{pathlib.Path(write_outliers).name}", optional=True) if write_outliers is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "GEN_SS_REVIEW_TABLE_METADATA",
    "GenSsReviewTableOutputs",
    "gen_ss_review_table",
]
