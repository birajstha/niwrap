# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V__SUMA_MAKE_SPEC_CARET_METADATA = Metadata(
    id="51ff878f5f2952a5ca43b33050e7b7c540ec84d6",
    name="@SUMA_Make_Spec_Caret",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class VSumaMakeSpecCaretOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__suma_make_spec_caret(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    left_hemisphere_spec: OutputPathType
    """Output spec file for the left hemisphere"""
    right_hemisphere_spec: OutputPathType
    """Output spec file for the right hemisphere"""


def v__suma_make_spec_caret(
    subject_id: str,
    help_: bool = False,
    debug: int | None = None,
    echo: bool = False,
    surface_path: str | None = None,
    side_labels_style: int | None = None,
    runner: Runner | None = None,
) -> VSumaMakeSpecCaretOutputs:
    """
    @SUMA_Make_Spec_Caret by AFNI Team.
    
    Prepare surfaces for viewing in SUMA, tested with Caret-5.2 surfaces.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@SUMA_Make_Spec_Caret.html
    
    Args:
        subject_id: Subject ID for file naming.
        help_: Show help information.
        debug: Print debug information along the way.
        echo: Turn shell echo on.
        surface_path: Path to directory containing 'SURFACES' and AFNI volume\
            used in creating the surfaces.
        side_labels_style: Naming style for Left, Right sides. Allowed values:\
            1 for L R LR style (default), 2 for LEFT RIGHT LR style, 3 for A B AB.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VSumaMakeSpecCaretOutputs`).
    """
    runner = runner or get_global_runner()
    if debug is not None and not (0 <= debug <= 2): 
        raise ValueError(f"'debug' must be between 0 <= x <= 2 but was {debug}")
    if side_labels_style is not None and not (1 <= side_labels_style <= 3): 
        raise ValueError(f"'side_labels_style' must be between 1 <= x <= 3 but was {side_labels_style}")
    execution = runner.start_execution(V__SUMA_MAKE_SPEC_CARET_METADATA)
    cargs = []
    cargs.append("@SUMA_Make_Spec_Caret")
    cargs.append("[OPTIONS]")
    cargs.append("-sid")
    cargs.extend(["-sid", subject_id])
    ret = VSumaMakeSpecCaretOutputs(
        root=execution.output_file("."),
        left_hemisphere_spec=execution.output_file(f"{subject_id}_lh.spec", optional=True),
        right_hemisphere_spec=execution.output_file(f"{subject_id}_rh.spec", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VSumaMakeSpecCaretOutputs",
    "V__SUMA_MAKE_SPEC_CARET_METADATA",
    "v__suma_make_spec_caret",
]
