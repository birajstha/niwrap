# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V__2DWARPER_ALLIN_METADATA = Metadata(
    id="64095ff567d9798a760745ed7b9d281ed44596cf",
    name="@2dwarper.Allin",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V2dwarperAllinOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__2dwarper_allin(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    reg_output: OutputPathType | None
    """Output registered dataset"""
    param_files: OutputPathType | None
    """Output registration parameter files"""


def v__2dwarper_allin(
    input_prefix: str,
    mask_prefix: str | None = None,
    output_prefix: str | None = None,
    runner: Runner | None = None,
) -> V2dwarperAllinOutputs:
    """
    @2dwarper.Allin by AFNI Team.
    
    Perform 2D registration on each slice of a 3D+time dataset, and combine the
    results.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@2dwarper.Allin.html
    
    Args:
        input_prefix: Prefix for the input 3D+time dataset.
        mask_prefix: Prefix of an existing mask dataset.
        output_prefix: Prefix for output datasets.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V2dwarperAllinOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__2DWARPER_ALLIN_METADATA)
    cargs = []
    cargs.append("@2dwarper.Allin")
    cargs.append("[OPTIONS]")
    cargs.append(input_prefix)
    ret = V2dwarperAllinOutputs(
        root=execution.output_file("."),
        reg_output=execution.output_file(f"{output_prefix}_reg+orig.HEAD", optional=True) if output_prefix is not None else None,
        param_files=execution.output_file(f"{output_prefix}_param_*.1D", optional=True) if output_prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V2dwarperAllinOutputs",
    "V__2DWARPER_ALLIN_METADATA",
    "v__2dwarper_allin",
]
