# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_DO_EXAMPLES_METADATA = Metadata(
    id="717f4c6aaa54f74c785cc8b16a8b6b0b1b0db825",
    name="@DO.examples",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni:latest",
)


class DoExamplesOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_do_examples(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_log: OutputPathType
    """Output log file when running in auto test mode"""


def _do_examples(
    auto_test: bool = False,
    runner: Runner | None = None,
) -> DoExamplesOutputs:
    """
    @DO.examples by Ziad S. Saad.
    
    A script to illustrate the use of Displayable Objects in SUMA.
    
    More information: https://discuss.afni.nimh.nih.gov/
    
    Args:
        auto_test: Run this script in test mode where user prompts are timed\
            out at 2 seconds, and the command output log is preserved in a file\
            called __testlog.txt.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DoExamplesOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_DO_EXAMPLES_METADATA)
    cargs = []
    cargs.append("@DO.examples")
    if auto_test:
        cargs.append("-auto_test")
    ret = DoExamplesOutputs(
        root=execution.output_file("."),
        output_log=execution.output_file(f"__testlog.txt", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "DoExamplesOutputs",
    "_DO_EXAMPLES_METADATA",
    "_do_examples",
]
