# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_NO_EXT_METADATA = Metadata(
    id="4c72f31cc394fb70b3c1751a7053410201303e90",
    name="@NoExt",
)


class NoExtOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_no_ext(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    outfile: OutputPathType
    """File name with specified extensions removed"""


def _no_ext(
    inputfile: str,
    extensions: list[str] | None = None,
    runner: Runner | None = None,
) -> NoExtOutputs:
    """
    @NoExt by Ziad Saad.
    
    Tool for removing specified extensions from filenames.
    
    Args:
        inputfile: Input file name with extension.
        extensions: Extensions to be removed.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `NoExtOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_NO_EXT_METADATA)
    cargs = []
    cargs.append("@NoExt")
    cargs.append("<inputfile>")
    if extensions is not None:
        cargs.extend(extensions)
    ret = NoExtOutputs(
        root=execution.output_file("."),
        outfile=execution.output_file(f"output"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "NoExtOutputs",
    "_NO_EXT_METADATA",
    "_no_ext",
]
