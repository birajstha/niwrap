# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_TFILTER_METADATA = Metadata(
    id="e9be2d225ca5d76c7219c941b0c94dac21e049cb",
    name="3dTfilter",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dTfilterOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_tfilter(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_dataset: OutputPathType
    """Filtered output dataset"""


def v_3d_tfilter(
    inputdataset: InputPathType,
    outputdataset: str,
    filters: list[str],
    runner: Runner | None = None,
) -> V3dTfilterOutputs:
    """
    3dTfilter by AFNI Team.
    
    3dTfilter filters the time series in each voxel according to the
    user-specified filter functions.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dTfilter.html
    
    Args:
        inputdataset: Input dataset.
        outputdataset: Output dataset.
        filters: Filter function(s) to apply.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dTfilterOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_TFILTER_METADATA)
    cargs = []
    cargs.append("3dTfilter")
    cargs.append("-input")
    cargs.extend(["-input", execution.input_file(inputdataset)])
    cargs.append("-prefix")
    cargs.extend(["-prefix", outputdataset])
    cargs.extend(["-filter", *filters])
    ret = V3dTfilterOutputs(
        root=execution.output_file("."),
        output_dataset=execution.output_file(f"{outputdataset}"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dTfilterOutputs",
    "V_3D_TFILTER_METADATA",
    "v_3d_tfilter",
]
