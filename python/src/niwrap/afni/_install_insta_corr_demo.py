# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

INSTALL_INSTA_CORR_DEMO_METADATA = Metadata(
    id="69f2ef2c2aa0f0888fd35a3196f5abaa998a6655",
    name="Install_InstaCorr_Demo",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class InstallInstaCorrDemoOutputs(typing.NamedTuple):
    """
    Output object returned when calling `install_insta_corr_demo(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def install_insta_corr_demo(
    wget: bool = False,
    curl: bool = False,
    full: bool = False,
    mini: bool = False,
    runner: Runner | None = None,
) -> InstallInstaCorrDemoOutputs:
    """
    Install_InstaCorr_Demo by AFNI Team.
    
    Installs and sets up AFNI's InstaCorr demo archive.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@Install_InstaCorr_Demo.html
    
    Args:
        wget: Use wget to download archive. Script chooses by default with\
            preference for curl.
        curl: Use curl to download archive. Script chooses by default with\
            preference for curl.
        full: Install the full version of the demo. Downloads all subject\
            surfaces, resting state volume time series, etc. The script processes\
            the data and produces the files needed for running the various\
            interactive InstaCorr demos.
        mini: Install the mini version of the demo. Downloads only the files\
            needed for running the various interactive InstaCorr demos.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `InstallInstaCorrDemoOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(INSTALL_INSTA_CORR_DEMO_METADATA)
    cargs = []
    cargs.append("@Install_InstaCorr_Demo")
    if wget:
        cargs.append("-wget")
    if curl:
        cargs.append("-curl")
    if full:
        cargs.append("-full")
    if mini:
        cargs.append("-mini")
    ret = InstallInstaCorrDemoOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "INSTALL_INSTA_CORR_DEMO_METADATA",
    "InstallInstaCorrDemoOutputs",
    "install_insta_corr_demo",
]
