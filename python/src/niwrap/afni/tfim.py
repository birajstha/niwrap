# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

TFIM_METADATA = Metadata(
    id="3e8c882d3e6b683630a778c715f9af62c4a81f6e",
    name="tfim",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="mcin/docker-tfim:latest",
)


class TfimOutputs(typing.NamedTuple):
    """
    Output object returned when calling `tfim(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    diff_output: OutputPathType | None
    """Difference image output. Default prefix is 'tfim'."""
    tspm_output: OutputPathType | None
    """T-statistic of difference. Default prefix is 'tfim'."""
    corr_output: OutputPathType | None
    """Equivalent correlation statistic output. Written if -eqcorr is used."""


def tfim(
    set1_images: list[InputPathType],
    set2_images: list[InputPathType],
    prefix: str | None = None,
    pthresh: float | int | None = None,
    eqcorr: float | int | None = None,
    paired: bool = False,
    base1_value: float | int | None = None,
    runner: Runner | None = None,
) -> TfimOutputs:
    """
    tfim by RW Cox.
    
    MCW TFIM: t-tests on sets of functional images.
    
    Args:
        set1_images: First set of image files.
        set2_images: Second set of image files.
        prefix: Prefix for output filenames. Default is 'tfim'.
        pthresh: Significance level (per voxel) to threshold the output with.\
            Voxels with t-statistic less significant than this will have their diff\
            output zeroed. Default is no threshold.
        eqcorr: Write out the equivalent correlation statistic. The number\
            'dval' is the value to use for 'dof'. Default is not to write this\
            file.
        paired: Compare -set1 and -set2 using a paired sample t-test. Illegal\
            with the -base1 option.
        base1_value: Base value for the first set of images. Used for Usage 2.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `TfimOutputs`).
    """
    runner = runner or get_global_runner()
    if pthresh is not None and not (0 <= pthresh <= 1): 
        raise ValueError(f"'pthresh' must be between 0 <= x <= 1 but was {pthresh}")
    execution = runner.start_execution(TFIM_METADATA)
    cargs = []
    cargs.append("tfim")
    cargs.append("[OPTIONS]")
    cargs.append("-set1")
    cargs.extend(["-set1", *[execution.input_file(f) for f in set1_images]])
    cargs.append("-set2")
    cargs.extend(["-set2", *[execution.input_file(f) for f in set2_images]])
    cargs.append("-base1")
    if base1_value is not None:
        cargs.extend(["-base1", str(base1_value)])
    ret = TfimOutputs(
        root=execution.output_file("."),
        diff_output=execution.output_file(f"{prefix}.diff") if prefix is not None else None,
        tspm_output=execution.output_file(f"{prefix}.tspm") if prefix is not None else None,
        corr_output=execution.output_file(f"{prefix}.corr", optional=True) if prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "TFIM_METADATA",
    "TfimOutputs",
    "tfim",
]
