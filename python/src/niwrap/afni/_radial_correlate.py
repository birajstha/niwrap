# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_RADIAL_CORRELATE_METADATA = Metadata(
    id="e65d9665c01b39d36f94af526f2028608f70a9f2",
    name="@radial_correlate",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class RadialCorrelateOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_radial_correlate(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    corr_volumes: OutputPathType | None
    """Directory containing correlation volumes"""


def _radial_correlate(
    input_files: list[InputPathType],
    results_dir: str | None = None,
    do_corr: str | None = None,
    do_clust: str | None = None,
    mask_dset: InputPathType | None = None,
    cthresh: float | int | None = None,
    frac_limit: float | int | None = None,
    sphere_rad: float | int | None = None,
    use_3dmerge: str | None = None,
    percentile: float | int | None = None,
    min_thr: float | int | None = None,
    nfirst: float | int | None = None,
    ver: bool = False,
    verbose: bool = False,
    help_: bool = False,
    hist: bool = False,
    corr_mask: str | None = None,
    do_clean: str | None = None,
    polort: float | int | None = None,
    merge_frad: float | int | None = None,
    runner: Runner | None = None,
) -> RadialCorrelateOutputs:
    """
    @radial_correlate by AFNI Team.
    
    Check datasets for correlation artifacts.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@radial_correlate.html
    
    Args:
        input_files: A list of EPI datasets.
        results_dir: Results directory for correlations.
        do_corr: Create correlation volumes (yes/no).
        do_clust: Cluster correlation volumes (yes/no).
        mask_dset: Specify a mask dataset to replace automask.
        cthresh: Threshold on correlation values.
        frac_limit: Minimum mask fraction surviving cluster.
        sphere_rad: Generate correlations within voxel spheres.
        use_3dmerge: Use 3dmerge rather than 3dLocalstat (yes/no).
        percentile: Percentile to use as threshold.
        min_thr: Minimum percentile threshold to be considered.
        nfirst: Number of initial TRs to remove.
        ver: Show version number.
        verbose: Make verbose: set echo.
        help_: Show help.
        hist: Show modification history.
        corr_mask: Mask time series before correlation blurring (yes/no).
        do_clean: Clean up at end, leaving only correlations (yes/no).
        polort: Detrend time series with given polynomial degree.
        merge_frad: Specify a radius fraction for 3dmerge blurring.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RadialCorrelateOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_RADIAL_CORRELATE_METADATA)
    cargs = []
    cargs.append("@radial_correlate")
    cargs.extend([execution.input_file(f) for f in input_files])
    cargs.append("[OPTIONS]")
    ret = RadialCorrelateOutputs(
        root=execution.output_file("."),
        corr_volumes=execution.output_file(f"{results_dir}/correlation_volumes", optional=True) if results_dir is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "RadialCorrelateOutputs",
    "_RADIAL_CORRELATE_METADATA",
    "_radial_correlate",
]
