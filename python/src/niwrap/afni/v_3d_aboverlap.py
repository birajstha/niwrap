# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_ABOVERLAP_METADATA = Metadata(
    id="875de921ae82dfcec4c7b260fabe77c1c0b95413",
    name="3dABoverlap",
)


class V3dAboverlapOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_aboverlap(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v_3d_aboverlap(
    dataset_a: InputPathType,
    dataset_b: InputPathType,
    no_automask: bool = False,
    quiet: bool = False,
    verbose: bool = False,
    runner: Runner | None = None,
) -> V3dAboverlapOutputs:
    """
    3dABoverlap by AFNI Team.
    
    Counts various metrics about how the automasks of datasets A and B overlap
    or don't overlap.
    
    More information: https://afni.nimh.nih.gov
    
    Args:
        dataset_a: First input dataset.
        dataset_b: Second input dataset.
        no_automask: Consider input datasets as masks (automask does not work\
            on mask datasets).
        quiet: Be as quiet as possible (without being entirely mute).
        verbose: Print out some progress reports (to stderr).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dAboverlapOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_ABOVERLAP_METADATA)
    cargs = []
    cargs.append("3dABoverlap")
    cargs.append("[OPTIONS]")
    cargs.append(execution.input_file(dataset_a))
    cargs.append(execution.input_file(dataset_b))
    ret = V3dAboverlapOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dAboverlapOutputs",
    "V_3D_ABOVERLAP_METADATA",
    "v_3d_aboverlap",
]
