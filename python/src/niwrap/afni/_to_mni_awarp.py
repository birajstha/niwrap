# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_TO_MNI_AWARP_METADATA = Metadata(
    id="7bca51fccec52aa109fadb88b6e96434caf278eb",
    name="@toMNI_Awarp",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class ToMniAwarpOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_to_mni_awarp(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_datasets: OutputPathType
    """The transformed datasets in 1x1x1 mm MNI space."""


def _to_mni_awarp(
    directory: str,
    datasets: list[InputPathType],
    runner: Runner | None = None,
) -> ToMniAwarpOutputs:
    """
    @toMNI_Awarp by AFNI Team.
    
    Transforms skull-stripped datasets to 1x1x1 mm MNI space using an affine
    transformation.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@toMNI_Awarp.html
    
    Args:
        directory: Name of the directory to be created where results will be\
            stored.
        datasets: List of datasets to be transformed.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ToMniAwarpOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_TO_MNI_AWARP_METADATA)
    cargs = []
    cargs.append("@toMNI_Awarp")
    cargs.append(directory)
    cargs.extend([execution.input_file(f) for f in datasets])
    ret = ToMniAwarpOutputs(
        root=execution.output_file("."),
        output_datasets=execution.output_file(f"{directory}/*"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "ToMniAwarpOutputs",
    "_TO_MNI_AWARP_METADATA",
    "_to_mni_awarp",
]
