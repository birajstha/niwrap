# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_CLUST_COUNT_METADATA = Metadata(
    id="f3afa47cd7f85d29f70e2a82fb0ec3cce6d5b71b",
    name="3dClustCount",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dClustCountOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_clust_count(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    clustcount_niml: OutputPathType | None
    """Summed results file in NIML format."""
    clustcount_1_d: OutputPathType | None
    """Summed results file in 1D format (when '-final' is used)."""
    final_clustcount_niml: OutputPathType | None
    """Summed results file in NIML format (when '-final' is used)."""


def v_3d_clust_count(
    datasets: list[InputPathType],
    prefix: str | None = None,
    final: bool = False,
    quiet: bool = False,
    runner: Runner | None = None,
) -> V3dClustCountOutputs:
    """
    3dClustCount by AFNI Team.
    
    This program takes as input 1 or more datasets, thresholds them at various
    levels, and counts up the number of clusters of various sizes.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dClustCount.html
    
    Args:
        datasets: Input datasets to be processed.
        prefix: Prefix of the filename into which results will be summed.\
            Actual filename will be 'sss.clustcount.niml'. If this file already\
            exists, results from the current run will be summed into the existing\
            results and the file then re-written.
        final: Output results in a format similar to 3dClustSim -- as 1D and\
            NIML formatted files with probabilities of various cluster sizes. This\
            option can be used without any input datasets to create final output\
            files from saved '.clustcount.niml' output file from earlier runs.
        quiet: Suppresses progress reports and other informational messages.\
            Should be placed first in the command line to quiet most messages.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dClustCountOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_CLUST_COUNT_METADATA)
    cargs = []
    cargs.append("3dClustCount")
    cargs.append("[OPTIONS]")
    cargs.append("DATASETS")
    ret = V3dClustCountOutputs(
        root=execution.output_file("."),
        clustcount_niml=execution.output_file(f"{prefix}.clustcount.niml", optional=True) if prefix is not None else None,
        clustcount_1_d=execution.output_file(f"{prefix}.1D", optional=True) if prefix is not None else None,
        final_clustcount_niml=execution.output_file(f"{prefix}.niml", optional=True) if prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dClustCountOutputs",
    "V_3D_CLUST_COUNT_METADATA",
    "v_3d_clust_count",
]
