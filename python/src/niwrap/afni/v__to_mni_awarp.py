# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

V__TO_MNI_AWARP_METADATA = Metadata(
    id="7bca51fccec52aa109fadb88b6e96434caf278eb.boutiques",
    name="@toMNI_Awarp",
    package="afni",
    container_image_tag="fcpindi/c-pac:latest",
)


class VToMniAwarpOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__to_mni_awarp(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_datasets: OutputPathType
    """The transformed datasets in 1x1x1 mm MNI space."""


def v__to_mni_awarp(
    directory: str,
    datasets: list[InputPathType],
    runner: Runner | None = None,
) -> VToMniAwarpOutputs:
    """
    Transforms skull-stripped datasets to 1x1x1 mm MNI space using an affine
    transformation.
    
    Author: AFNI Team
    
    URL: https://afni.nimh.nih.gov/pub/dist/doc/program_help/@toMNI_Awarp.html
    
    Args:
        directory: Name of the directory to be created where results will be\
            stored.
        datasets: List of datasets to be transformed.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VToMniAwarpOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__TO_MNI_AWARP_METADATA)
    cargs = []
    cargs.append("@toMNI_Awarp")
    cargs.append(directory)
    cargs.extend([execution.input_file(f) for f in datasets])
    ret = VToMniAwarpOutputs(
        root=execution.output_file("."),
        output_datasets=execution.output_file(directory + "/*"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VToMniAwarpOutputs",
    "V__TO_MNI_AWARP_METADATA",
    "v__to_mni_awarp",
]
