# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_DJUNCT_ANONYMIZE_METADATA = Metadata(
    id="ce990869db6da10de714d0cd7b50cda811c08c5f",
    name="@djunct_anonymize",
)


class DjunctAnonymizeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_djunct_anonymize(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def _djunct_anonymize(
    input_: InputPathType,
    add_note: str | None = None,
    copy_to: InputPathType | None = None,
    overwrite: bool = False,
    runner: Runner | None = None,
) -> DjunctAnonymizeOutputs:
    """
    @djunct_anonymize by PA Taylor.
    
    Helper program to anonymize files.
    
    Args:
        input_: Input dataset.
        add_note: Add a note to the history after anonymizing.
        copy_to: Copy the input to a new file, which is then anonymized.
        overwrite: Overwrite the existing file if using -copy_to.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DjunctAnonymizeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_DJUNCT_ANONYMIZE_METADATA)
    cargs = []
    cargs.append("@djunct_anonymize")
    cargs.append(execution.input_file(input_))
    if add_note is not None:
        cargs.extend(["-add_note", add_note])
    if copy_to is not None:
        cargs.extend(["-copy_to", execution.input_file(copy_to)])
    if overwrite:
        cargs.append("-overwrite")
    ret = DjunctAnonymizeOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "DjunctAnonymizeOutputs",
    "_DJUNCT_ANONYMIZE_METADATA",
    "_djunct_anonymize",
]
