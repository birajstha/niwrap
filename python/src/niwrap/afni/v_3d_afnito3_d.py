# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_AFNITO3_D_METADATA = Metadata(
    id="9b75f7e484d5a74ae5262ea84822922d585970d4",
    name="3dAFNIto3D",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dAfnito3DOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_afnito3_d(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    outfile: OutputPathType | None
    """Output 3D file, either in binary or text format"""


def v_3d_afnito3_d(
    dataset: InputPathType,
    prefix: str | None = None,
    binary: bool = False,
    text: bool = False,
    runner: Runner | None = None,
) -> V3dAfnito3DOutputs:
    """
    3dAFNIto3D by AFNI Team.
    
    Reads in an AFNI dataset, and writes it out as a 3D file.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dAFNIto3D.html
    
    Args:
        dataset: AFNI dataset to be converted.
        prefix: Write result into file with specified prefix.
        binary: Write data in binary format.
        text: Write data in text format.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dAfnito3DOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_AFNITO3_D_METADATA)
    cargs = []
    cargs.append("3dAFNIto3D")
    cargs.append("[OPTIONS]")
    cargs.append(execution.input_file(dataset))
    ret = V3dAfnito3DOutputs(
        root=execution.output_file("."),
        outfile=execution.output_file(f"{prefix}.3D") if prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dAfnito3DOutputs",
    "V_3D_AFNITO3_D_METADATA",
    "v_3d_afnito3_d",
]
