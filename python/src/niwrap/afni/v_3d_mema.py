# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_MEMA_METADATA = Metadata(
    id="31054185aaf87514b6d1c6535d8190d8678823b5",
    name="3dMEMA",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni:latest",
)


class V3dMemaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_mema(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output file from the analysis"""


def v_3d_mema(
    prefix: str,
    set_: list[str],
    jobs: float | int | None = None,
    covariates: InputPathType | None = None,
    covariates_center: str | None = None,
    covariates_model: str | None = None,
    covariates_name: list[str] | None = None,
    groups: list[str] | None = None,
    cio: bool = False,
    hktest: bool = False,
    mask: InputPathType | None = None,
    max_zeros: float | int | None = None,
    missing_data: list[str] | None = None,
    model_outliers: bool = False,
    n_nonzero: float | int | None = None,
    no_hktest: bool = False,
    no_model_outliers: bool = False,
    no_residual_z: bool = False,
    residual_z: bool = False,
    rio: bool = False,
    equal_variance: bool = False,
    unequal_variance: bool = False,
    verb: float | int | None = None,
    dbg_args: bool = False,
    help_: bool = False,
    conditions: list[str] | None = None,
    no_tstat: bool = False,
    runner: Runner | None = None,
) -> V3dMemaOutputs:
    """
    3dMEMA by AFNI (Analysis of Functional NeuroImages).
    
    3dMEMA is a program for performing Mixed Effects Meta Analysis at group
    level that models both within- and across-subjects variability.
    
    More information: https://afni.nimh.nih.gov/sscc/gangc/MEMA.html
    
    Args:
        prefix: Output prefix (just prefix, no view+suffix needed).
        set_: Set data for one of the test variables.
        jobs: Number of jobs for parallel computing.
        covariates: Specify the name of a text file containing a table for the\
            covariate(s).
        covariates_center: Specify the center values for covariates.
        covariates_model: Specify how covariates should be modeled.
        covariates_name: Specify the name of each covariate.
        groups: Label of groups, used for output naming.
        cio: Use AFNI's C io functions.
        hktest: Perform Hartung-Knapp adjustment for the output t-statistic.
        mask: Only process voxels inside the specified mask.
        max_zeros: Specify how many beta/t-statistics can be zero.
        missing_data: Specify missing data handling.
        model_outliers: Model outliers with a Laplace distribution.
        n_nonzero: Number of non-zero beta values required.
        no_hktest: Specify not to use Hartung-Knapp adjustment.
        no_model_outliers: Specify not to model outliers.
        no_residual_z: Do not output residuals and their Z values.
        residual_z: Output residuals and their Z values.
        rio: Use R's io functions.
        equal_variance: Assume same cross-subjects variability between groups.
        unequal_variance: Model cross-subject variability difference between\
            groups.
        verb: Specify verbosity level.
        dbg_args: Output missing data debug file.
        help_: Show help message.
        conditions: Name of 1 or 2 conditions, tasks, or GLTs.
        no_tstat: Do not compute t-statistics.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dMemaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_MEMA_METADATA)
    cargs = []
    cargs.append("3dMEMA")
    cargs.append("[OPTIONS]")
    ret = V3dMemaOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"{prefix}.nii.gz", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dMemaOutputs",
    "V_3D_MEMA_METADATA",
    "v_3d_mema",
]
