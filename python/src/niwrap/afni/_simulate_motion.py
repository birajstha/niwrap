# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_SIMULATE_MOTION_METADATA = Metadata(
    id="6102ae0ed4e293fe072c873d3b33e0de8d80fd92",
    name="@simulate_motion",
)


class SimulateMotionOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_simulate_motion(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    simulated_motion_output: OutputPathType | None
    """Motion simulated EPI time series"""


def _simulate_motion(
    epi: InputPathType,
    motion_file: InputPathType,
    epi_timing: InputPathType | None = None,
    prefix: str | None = None,
    save_workdir: bool = False,
    test: bool = False,
    verb_level: float | int | None = None,
    vr_base: float | int | None = None,
    warp_method: str | None = None,
    warp_1_d: InputPathType | None = None,
    warp_master: InputPathType | None = None,
    wsinc5: bool = False,
    help_: bool = False,
    hist: bool = False,
    todo: bool = False,
    ver: bool = False,
    runner: Runner | None = None,
) -> SimulateMotionOutputs:
    """
    @simulate_motion by R Reynolds.
    
    Create simulated motion time series in an EPI dataset based on the provided
    motion parameters and an input volume.
    
    Args:
        epi: Input EPI volume or time series (only a volreg base is needed,\
            though more is okay).
        motion_file: Motion parameter file (as output by 3dvolreg).
        epi_timing: Provide EPI dataset with slice timing.
        prefix: Prefix for data results (default = motion_sim.NUM_TRS).
        save_workdir: Do not remove the 'work' directory.
        test: Only test running the program, do not create a simulated motion\
            dataset.
        verb_level: Specify a verbose level (default = 1).
        vr_base: 0-based index of volreg base in EPI dataset.
        warp_method: Specify a method for forward alignment/transform.
        warp_1_d: Specify a 12 parameter affine transformation.
        warp_master: Specify a grid master dataset for the -warp_1D transform.
        wsinc5: Use wsinc5 interpolation in 3dAllineate.
        help_: Show help message.
        hist: Show program modification history.
        todo: Show current todo list.
        ver: Show program version.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SimulateMotionOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_SIMULATE_MOTION_METADATA)
    cargs = []
    cargs.append("@simulate_motion")
    cargs.append("[options]")
    cargs.append("-epi")
    cargs.extend(["-epi", execution.input_file(epi)])
    cargs.append("-motion_file")
    cargs.extend(["-motion_file", execution.input_file(motion_file)])
    ret = SimulateMotionOutputs(
        root=execution.output_file("."),
        simulated_motion_output=execution.output_file(f"{prefix}_simulated_motion.nii.gz", optional=True) if prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SimulateMotionOutputs",
    "_SIMULATE_MOTION_METADATA",
    "_simulate_motion",
]
