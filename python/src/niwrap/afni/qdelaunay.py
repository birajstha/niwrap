# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

QDELAUNAY_METADATA = Metadata(
    id="9869f0333280bcb7be3be93e96e70d709a2bc71a",
    name="qdelaunay",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class QdelaunayOutputs(typing.NamedTuple):
    """
    Output object returned when calling `qdelaunay(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def qdelaunay(
    input_file: InputPathType,
    furthest_site: bool = False,
    triangulated_output: bool = False,
    joggled_input: bool = False,
    joggle_range: float | int | None = None,
    search_simplex: bool = False,
    point_infinity: bool = False,
    delaunay_visible: str | None = None,
    delaunay_regions: str | None = None,
    trace_level: float | int | None = None,
    check: bool = False,
    statistics_: bool = False,
    verify: bool = False,
    output_stdout: bool = False,
    facets_summary: float | int | None = None,
    input_file_option: InputPathType | None = None,
    output_file_option: InputPathType | None = None,
    trace_point: float | int | None = None,
    trace_merge: float | int | None = None,
    trace_merge_width: float | int | None = None,
    stop_point: float | int | None = None,
    stop_cone_point: float | int | None = None,
    centrum_radius: float | int | None = None,
    max_angle_cosine: float | int | None = None,
    perturb_factor: float | int | None = None,
    min_facet_width: float | int | None = None,
    facet_dump: bool = False,
    geomview: bool = False,
    vertices_incident: bool = False,
    mathematica: bool = False,
    off_format: bool = False,
    point_coordinates: bool = False,
    summary: bool = False,
    runner: Runner | None = None,
) -> QdelaunayOutputs:
    """
    qdelaunay by AFNI Team.
    
    Compute the Delaunay triangulation using Qhull.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/qdelaunay.html
    
    Args:
        input_file: Input file containing point coordinates.
        furthest_site: Compute furthest-site Delaunay triangulation.
        triangulated_output: Triangulated output.
        joggled_input: Joggled input instead of merged facets.
        joggle_range: Randomly joggle input in range [-n,n].
        search_simplex: Search all points for the initial simplex.
        point_infinity: Add point-at-infinity to Delaunay triangulation.
        delaunay_visible: Print Delaunay region if visible from point n, -n if\
            not.
        delaunay_regions: Print Delaunay regions that include point n, -n if\
            not.
        trace_level: Trace at level n, 4=all, 5=mem/gauss, -1= events.
        check: Check frequently during execution.
        statistics_: Print statistics.
        verify: Verify result: structure, convexity, and in-circle test.
        output_stdout: Send all output to stdout.
        facets_summary: Report summary when n or more facets created.
        input_file_option: Input data from file, no spaces or single quotes.
        output_file_option: Output results to file, may be enclosed in single\
            quotes.
        trace_point: Turn on tracing when point n added to hull.
        trace_merge: Turn on tracing at merge n.
        trace_merge_width: Trace merge facets when width > n.
        stop_point: Stop Qhull after adding point n, -n for before.
        stop_cone_point: Stop Qhull after building cone for point n.
        centrum_radius: Radius of centrum (roundoff added). Merge facets if\
            non-convex.
        max_angle_cosine: Cosine of maximum angle. Merge facets if cosine > n\
            or non-convex.
        perturb_factor: Randomly perturb computations by a factor of [1-n,1+n].
        min_facet_width: Min facet width for outside point (before roundoff).
        facet_dump: Facet dump.
        geomview: Geomview output.
        vertices_incident: Vertices incident to each Delaunay region.
        mathematica: Mathematica output (2-d only, lifted to a paraboloid).
        off_format: OFF format (dim, points, and facets as a paraboloid).
        point_coordinates: Point coordinates (lifted to a paraboloid).
        summary: Summary (stderr).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `QdelaunayOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(QDELAUNAY_METADATA)
    cargs = []
    cargs.append("qdelaunay")
    cargs.append("[OPTION_FLAGS]")
    cargs.append("<")
    cargs.append(execution.input_file(input_file))
    ret = QdelaunayOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "QDELAUNAY_METADATA",
    "QdelaunayOutputs",
    "qdelaunay",
]
