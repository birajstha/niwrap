# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

APSEARCH_METADATA = Metadata(
    id="50b5ec47557fadaf89f9b20ffc67986cfa7b79b9",
    name="apsearch",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="example/docker-apsearch:latest",
)


class ApsearchOutputs(typing.NamedTuple):
    """
    Output object returned when calling `apsearch(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType | None
    """File containing search results"""


def apsearch(
    search_term: str,
    file_output: InputPathType | None = None,
    verbose: bool = False,
    runner: Runner | None = None,
) -> ApsearchOutputs:
    """
    apsearch by Tool Author Name.
    
    A tool for searching applications.
    
    More information: https://example.com/apsearch
    
    Args:
        search_term: Term to search.
        file_output: File to save the search results.
        verbose: Print detailed information during search.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ApsearchOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(APSEARCH_METADATA)
    cargs = []
    cargs.append("apsearch")
    cargs.append(search_term)
    if file_output is not None:
        cargs.append(execution.input_file(file_output))
    if verbose:
        cargs.append("-v")
    ret = ApsearchOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"{pathlib.Path(file_output).name}", optional=True) if file_output is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "APSEARCH_METADATA",
    "ApsearchOutputs",
    "apsearch",
]
