# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

ISO_SURFACE_METADATA = Metadata(
    id="c65984bb34abefb3c657840f9cc7def55707820e",
    name="IsoSurface",
    container_image_type="docker",
    container_image_index="dockerhub.io",
    container_image_tag="myregistry.com/isosurface:latest",
)


class IsoSurfaceOutputs(typing.NamedTuple):
    """
    Output object returned when calling `iso_surface(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_surface_ply: OutputPathType
    """Output isosurface in PLY format."""
    output_surface_gii: OutputPathType
    """Output isosurface in GIFTI format."""
    output_surface_stl: OutputPathType
    """Output isosurface in STL format."""


def iso_surface(
    input_vol: InputPathType | None = None,
    shape_spec: list[str] | None = None,
    isorois: bool = False,
    isoval: str | None = None,
    isorange: list[str] | None = None,
    isocmask: str | None = None,
    output_prefix: str | None = None,
    tsmooth: list[str] | None = None,
    debug: str | None = None,
    autocrop: bool = False,
    remesh: str | None = None,
    xform: str | None = None,
    novolreg: bool = False,
    noxform: bool = False,
    runner: Runner | None = None,
) -> IsoSurfaceOutputs:
    """
    IsoSurface by Ziad S. Saad, SSCC/NIMH/NIH.
    
    A program to perform isosurface extraction from a volume.
    
    Args:
        input_vol: Input volume file.
        shape_spec: Built-in shape specification.
        isorois: Create isosurface for each unique value in the input volume.
        isoval: Create isosurface where volume = V.
        isorange: Create isosurface where V0 <= volume < V1.
        isocmask: Create isosurface where MASK_COM != 0.
        output_prefix: Prefix of output surface file.
        tsmooth: Smooth resultant surface using Taubin smoothing with\
            parameters KPB and NITER.
        debug: Debug levels of 0 (default), 1, 2, 3.
        autocrop: Crop input volume before extraction.
        remesh: Remesh the surface(s).
        xform: Transform to apply to volume values before extracting.
        novolreg: Ignore any Rotate, Volreg, Tagalign, or WarpDrive\
            transformations.
        noxform: Same as -novolreg.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `IsoSurfaceOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(ISO_SURFACE_METADATA)
    cargs = []
    cargs.append("IsoSurface")
    if shape_spec is not None:
        cargs.extend(["-shape", *shape_spec])
    if isocmask is not None:
        cargs.extend(["-isocmask", isocmask])
    if noxform:
        cargs.append("-noxform")
    if tsmooth is not None:
        cargs.extend(["-Tsmooth", *tsmooth])
    if debug is not None:
        cargs.extend(["-debug", debug])
    ret = IsoSurfaceOutputs(
        root=execution.output_file("."),
        output_surface_ply=execution.output_file(f"[MASK]_surf.ply", optional=True),
        output_surface_gii=execution.output_file(f"[MASK]_surf.gii", optional=True),
        output_surface_stl=execution.output_file(f"[MASK]_surf.stl", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "ISO_SURFACE_METADATA",
    "IsoSurfaceOutputs",
    "iso_surface",
]
