# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_CLIP_LEVEL_METADATA = Metadata(
    id="4c3a3f238117592b0e42e0da0f35eec4bb95c81d",
    name="3dClipLevel",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dClipLevelOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_clip_level(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v_3d_clip_level(
    dataset: InputPathType,
    mfrac: float | int | None = None,
    doall: bool = False,
    grad: str | None = None,
    runner: Runner | None = None,
) -> V3dClipLevelOutputs:
    """
    3dClipLevel by AFNI Team.
    
    Estimates the value at which to clip the anatomical dataset so that
    background regions are set to zero.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dClipLevel.html
    
    Args:
        dataset: Input dataset (e.g. dataset.nii.gz).
        mfrac: Use the number ff instead of 0.50 in the algorithm.
        doall: Apply the algorithm to each sub-brick separately.
        grad: Compute a 'gradual' clip level as a function of voxel position\
            and output to a dataset with the given prefix.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dClipLevelOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_CLIP_LEVEL_METADATA)
    cargs = []
    cargs.append("3dClipLevel")
    cargs.append("[options]")
    cargs.append(execution.input_file(dataset))
    ret = V3dClipLevelOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dClipLevelOutputs",
    "V_3D_CLIP_LEVEL_METADATA",
    "v_3d_clip_level",
]
