# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_RETINO_PROC_METADATA = Metadata(
    id="00eb394d00dbae2589b361d3e0e1e448afbbeb48",
    name="@RetinoProc",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class RetinoProcOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_retino_proc(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def _retino_proc(
    tr: float | int,
    period_ecc: float | int,
    period_pol: float | int,
    ccw: list[InputPathType] | None = None,
    clw: list[InputPathType] | None = None,
    exp: list[InputPathType] | None = None,
    con: list[InputPathType] | None = None,
    epi_ref: InputPathType | None = None,
    epi_anat_ref: InputPathType | None = None,
    anat_vol: InputPathType | None = None,
    anat_vol_epi: InputPathType | None = None,
    surf_vol: InputPathType | None = None,
    surf_vol_epi: InputPathType | None = None,
    phase: bool = False,
    delay: bool = False,
    pre_ecc: float | int | None = None,
    pre_pol: float | int | None = None,
    on_ecc: str | None = None,
    on_pol: str | None = None,
    var_on_ecc: str | None = None,
    var_on_pol: str | None = None,
    nwedges: float | int | None = None,
    nrings: float | int | None = None,
    fwhm_pol: float | int | None = None,
    fwhm_ecc: float | int | None = None,
    ignore: float | int | None = None,
    no_tshift: bool = False,
    spec_left: InputPathType | None = None,
    spec_right: InputPathType | None = None,
    dorts: InputPathType | None = None,
    ccw_orts: list[InputPathType] | None = None,
    clw_orts: list[InputPathType] | None = None,
    exp_orts: list[InputPathType] | None = None,
    con_orts: list[InputPathType] | None = None,
    sid: str | None = None,
    out_dir: str | None = None,
    echo: bool = False,
    echo_edu: bool = False,
    a2e_opts: str | None = None,
    aea_opts: str | None = None,
    runner: Runner | None = None,
) -> RetinoProcOutputs:
    """
    @RetinoProc by AFNI Team.
    
    A script to process retinotopic FMRI data, using AFNI's 3dRetinoPhase and
    SurfRetinMap.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@RetinoProc.html
    
    Args:
        tr: TR, in seconds, of retinotopic scans.
        period_ecc: Period, in seconds, of eccentricity stimuli.
        period_pol: Period, in seconds, of polar angle stimuli.
        ccw: Input time series dataset for counterclockwise stimulus.
        clw: Input time series dataset for clockwise stimulus.
        exp: Input time series dataset for expanding stimulus.
        con: Input time series dataset for contracting stimulus.
        epi_ref: Specify a volume from the EPI time series to which all EPI\
            volumes are aligned.
        epi_anat_ref: Specify a volume from the EPI time series that is better\
            suited for aligning the T1 to it than EpiRef might be.
        anat_vol: T1 volume acquired during the same session as the retinotopic\
            scans.
        anat_vol_epi: Anatomical volume aligned to EPI reference.
        surf_vol: Surface Volume for the cortical surfaces.
        surf_vol_epi: Surface volume aligned to experiment's EPI data.
        phase: Use phase of fundamental frequency to estimate latency.
        delay: Use delay relative to reference time series to estimate latency.
        pre_ecc: Duration, in seconds, before eccentricity stimulus.
        pre_pol: Duration, in seconds, before polar angle stimulus.
        on_ecc: Number of stimulation blocks and duration of stimulation for\
            eccentricity stimulus.
        on_pol: Number of stimulation blocks and duration of stimulation for\
            polar angle stimulus.
        var_on_ecc: Multiple on durations for eccentricity stimulus.
        var_on_pol: Multiple on durations for polar angle stimulus.
        nwedges: Number of wedges in polar stimulus.
        nrings: Number of rings in eccentricity stimulus.
        fwhm_pol: Target smoothness for polar stimulus.
        fwhm_ecc: Target smoothness for eccentricity stimulus.
        ignore: Ignore volumes from the beginning of each time series.
        no_tshift: Do not correct for slice timing.
        spec_left: Spec file for left hemisphere.
        spec_right: Spec file for right hemisphere.
        dorts: Detrend time series using columns in ORT1D file.
        ccw_orts: Detrend time series for counterclockwise stimulus.
        clw_orts: Detrend time series for clockwise stimulus.
        exp_orts: Detrend time series for expanding stimulus.
        con_orts: Detrend time series for contracting stimulus.
        sid: SID is a flag identifying the subject.
        out_dir: Directory where processing results are to be stored.
        echo: Turn on the command echoing to help with debugging script failure.
        echo_edu: Turn on command echoing for certain programs only.
        a2e_opts: Pass options to @SUMA_AlignToExperiment script.
        aea_opts: Pass options to align_epi_anat.py.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RetinoProcOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_RETINO_PROC_METADATA)
    cargs = []
    cargs.append("@RetinoProc")
    cargs.append("[INPUT_FILES]")
    cargs.append("[OPTIONS]")
    ret = RetinoProcOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "RetinoProcOutputs",
    "_RETINO_PROC_METADATA",
    "_retino_proc",
]
