# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_CHECK_FOR_AFNI_DSET_METADATA = Metadata(
    id="e591c9435c009f8bdf1c6fe5610937b7d16c7bc5",
    name="@CheckForAfniDset",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni_latest",
)


class CheckForAfniDsetOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_check_for_afni_dset(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_status: OutputPathType
    """Text file containing the status code of the dataset"""


def _check_for_afni_dset(
    dataset_name: str,
    runner: Runner | None = None,
) -> CheckForAfniDsetOutputs:
    """
    @CheckForAfniDset by Ziad Saad (saadz@mail.nih.gov), SSCC/NIMH/ National
    Institutes of Health, Bethesda Maryland.
    
    Check for the existence of AFNI datasets.
    
    Args:
        dataset_name: Path to the AFNI dataset (e.g.,\
            /Data/stuff/Hello+orig.HEAD).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `CheckForAfniDsetOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_CHECK_FOR_AFNI_DSET_METADATA)
    cargs = []
    cargs.append("@CheckForAfniDset")
    cargs.append(dataset_name)
    ret = CheckForAfniDsetOutputs(
        root=execution.output_file("."),
        output_status=execution.output_file(f"{dataset_name}_status.txt", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "CheckForAfniDsetOutputs",
    "_CHECK_FOR_AFNI_DSET_METADATA",
    "_check_for_afni_dset",
]
