# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_3D_QWARP_METADATA = Metadata(
    id="6f830c301ec3b62232771d6951ef51ac5136d7aa",
    name="3dQwarp",
    container_image_type="docker",
    container_image_tag="afni/afni:latest",
)


class V3dQwarpOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_qwarp(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    warped_dataset: OutputPathType
    """Warped dataset"""
    warp_dataset: OutputPathType
    """Warp dataset"""
    inverse_warp_dataset: OutputPathType
    """Inverse warp dataset"""


def v_3d_qwarp(
    base_dataset: InputPathType,
    source_dataset: InputPathType,
    prefix: str,
    no_warp: bool = False,
    inverse_warp: bool = False,
    no_dataset: bool = False,
    a_warp: bool = False,
    pcl: bool = False,
    pear: bool = False,
    hel: bool = False,
    mi: bool = False,
    nmi: bool = False,
    lpc: bool = False,
    lpa: bool = False,
    noneg: bool = False,
    nopenalty: bool = False,
    minpatch: float | int | None = None,
    maxlev: float | int | None = None,
    verbose: bool = False,
    quiet: bool = False,
    runner: Runner | None = None,
) -> V3dQwarpOutputs:
    """
    3dQwarp by Zhark the Warped.
    
    Computes a nonlinearly warped version of source_dataset to match
    base_dataset.
    
    Args:
        base_dataset: Base dataset.
        source_dataset: Source dataset.
        prefix: Prefix for the output datasets.
        no_warp: Do not save the _WARP file.
        inverse_warp: Compute and save the _WARPINV file.
        no_dataset: Do not save the warped source dataset.
        a_warp: Output the nonlinear warp when -allineate is used.
        pcl: Clipped Pearson correlation (default method).
        pear: Use strict Pearson correlation for matching.
        hel: Use Hellinger metric for matching.
        mi: Use Mutual Information for matching.
        nmi: Use Normalized Mutual Information for matching.
        lpc: Use Local Pearson correlation (signed) for matching.
        lpa: Use Local Pearson correlation (absolute value) for matching.
        noneg: Replace negative values in either input volume with 0.
        nopenalty: Don't use a penalty on the cost functional.
        minpatch: Set the minimum patch size for warp searching.
        maxlev: Set the maximum refinement level.
        verbose: Print out very verbose progress messages.
        quiet: Cut out most progress messages.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V3dQwarpOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_3D_QWARP_METADATA)
    cargs = []
    cargs.append("3dQwarp")
    cargs.append("-base")
    cargs.append(execution.input_file(base_dataset))
    cargs.append("-source")
    cargs.append(execution.input_file(source_dataset))
    cargs.append("-prefix")
    cargs.append(prefix)
    cargs.append("[OPTIONS]")
    ret = V3dQwarpOutputs(
        root=execution.output_file("."),
        warped_dataset=execution.output_file(f"{PREFIX}+tlrc"),
        warp_dataset=execution.output_file(f"{PREFIX}_WARP+tlrc", optional=True),
        inverse_warp_dataset=execution.output_file(f"{PREFIX}_WARPINV+tlrc", optional=True),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V3dQwarpOutputs",
    "V_3D_QWARP_METADATA",
    "v_3d_qwarp",
]
