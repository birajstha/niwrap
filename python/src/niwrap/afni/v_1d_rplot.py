# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

V_1D_RPLOT_METADATA = Metadata(
    id="563de597144e9f7c7ff166ac3722dd396521b524",
    name="1dRplot",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V1dRplotOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_1d_rplot(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_plot: OutputPathType | None
    """Output plot file"""


def v_1d_rplot(
    input_file: InputPathType,
    output_prefix: str | None = None,
    save_size: list[float | int] | None = None,
    tr: float | int | None = None,
    title: str | None = None,
    input_type: typing.Literal["VOLREG", "XMAT"] | None = None,
    legend_font_size: float | int | None = None,
    left_y_margin_text: str | None = None,
    right_y_margin_text: str | None = None,
    x_axis_label: str | None = None,
    y_axis_label: str | None = None,
    x_axis_range: list[float | int] | None = None,
    y_axis_range: list[float | int] | None = None,
    plot_char: list[str] | None = None,
    group_labels: list[str] | None = None,
    legend_show: bool = False,
    legend_position: typing.Literal["bottomright", "bottom", "bottomleft", "left", "topleft", "top", "topright", "right", "center"] | None = None,
    save_plot: bool = False,
    column_name_show: bool = False,
    runner: Runner | None = None,
) -> V1dRplotOutputs:
    """
    1dRplot by AFNI Team.
    
    Program for plotting a 1D file.
    
    More information:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/1dRplot.html
    
    Args:
        input_file: Input 1D file to plot.
        output_prefix: Output prefix. See also -save.
        save_size: Save figure size in pixels. Default is 2000 2000.
        tr: Sampling period, in seconds.
        title: Graph title. File name is used by default. Use NONE to be sure\
            no title is used.
        input_type: Type of data in 1D file. Choose from 'VOLREG' or 'XMAT'.
        legend_font_size: Font size for legend text.
        left_y_margin_text: Text to be placed at left Y margin. You need one\
            string per column.
        right_y_margin_text: Text to be placed at right Y margin. You need one\
            string per column.
        x_axis_label: Labels for the X axis.
        y_axis_label: Labels for the Y axis.
        x_axis_range: Range of X axis. STEP is optional.
        y_axis_range: Range of Y axis. STEP is optional.
        plot_char: Symbols for each column in input.
        group_labels: Legends assigned to each group. Default is no labeling.
        legend_show: Show legend.
        legend_position: Legend position. Choose from: bottomright, bottom,\
            bottomleft, left, topleft, top, topright, right, center.
        save_plot: Save plot and quit. No need for -prefix with this option.
        column_name_show: Show names of column in input.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V1dRplotOutputs`).
    """
    runner = runner or get_global_runner()
    if save_size is not None and (len(save_size) != 2): 
        raise ValueError(f"Length of 'save_size' must be 2 but was {len(save_size)}")
    execution = runner.start_execution(V_1D_RPLOT_METADATA)
    cargs = []
    cargs.append("1dRplot")
    cargs.extend(["-input", execution.input_file(input_file)])
    cargs.append("[OPTIONS]")
    ret = V1dRplotOutputs(
        root=execution.output_file("."),
        output_plot=execution.output_file(f"{output_prefix}*.jpg", optional=True) if output_prefix is not None else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V1dRplotOutputs",
    "V_1D_RPLOT_METADATA",
    "v_1d_rplot",
]
