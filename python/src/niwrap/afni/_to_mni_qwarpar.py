# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_TO_MNI_QWARPAR_METADATA = Metadata(
    id="8b70213e8759061a231fd2ad0c138986d0808a8e",
    name="@toMNI_Qwarpar",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="custom/docker-image:latest",
)


class ToMniQwarparOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_to_mni_qwarpar(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output dataset created after processing."""


def _to_mni_qwarpar(
    numcpu: float | int,
    numjob: float | int,
    runner: Runner | None = None,
) -> ToMniQwarparOutputs:
    """
    @toMNI_Qwarpar by Author Name.
    
    Transforms datasets to MNI space, then collectively re-transforms them to
    produce a refined average.
    
    Args:
        numcpu: TOTAL NUMBER OF CPUS TO USE; should not exceed the number of\
            CPUs (cores) on the system.
        numjob: MAX NUMBER OF JOBS TO USE; often set to the same value as\
            numcpu so that 1 dataset is processed in 1 core.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ToMniQwarparOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_TO_MNI_QWARPAR_METADATA)
    cargs = []
    cargs.append("@toMNI_Qwarpar")
    ret = ToMniQwarparOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(f"*_uni+tlrc.HEAD"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "ToMniQwarparOutputs",
    "_TO_MNI_QWARPAR_METADATA",
    "_to_mni_qwarpar",
]
