# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

_MAKE_PLUG_DIFF_METADATA = Metadata(
    id="9b98f6c899cb907b229f903a55d51eed0ec85776",
    name="@make_plug_diff",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni_latest",
)


class MakePlugDiffOutputs(typing.NamedTuple):
    """
    Output object returned when calling `_make_plug_diff(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def _make_plug_diff(
    vtk_dir: str,
    xm_dir: str,
    afni_src_dir: str,
    afni_bin_dir: str,
    diff_dir: str,
    comments: bool = False,
    linux: bool = False,
    runner: Runner | None = None,
) -> MakePlugDiffOutputs:
    """
    @make_plug_diff by AFNI.
    
    Compiles AFNI's diffusion plugin.
    
    More information: https://afni.nimh.nih.gov
    
    Args:
        vtk_dir: Directory where vtk is installed.
        xm_dir: Directory where motif is installed.
        afni_src_dir: Full path to AFNI's src/ directory.
        afni_bin_dir: Path, relative to ASRCDIR, to abin.
        diff_dir: Name of directory containing diffusion code.
        comments: Output comments only.
        linux: Flag for doing linuxy things.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MakePlugDiffOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(_MAKE_PLUG_DIFF_METADATA)
    cargs = []
    cargs.append("@make_plug_diff")
    cargs.append("-vtk")
    cargs.extend(["-vtk", vtk_dir])
    cargs.append("-xm")
    cargs.extend(["-xm", xm_dir])
    cargs.append("-asrc")
    cargs.extend(["-asrc", afni_src_dir])
    cargs.append("-abin")
    cargs.extend(["-abin", afni_bin_dir])
    if comments:
        cargs.append("-comments")
    if linux:
        cargs.append("-linux")
    cargs.extend(["-diff", diff_dir])
    ret = MakePlugDiffOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MakePlugDiffOutputs",
    "_MAKE_PLUG_DIFF_METADATA",
    "_make_plug_diff",
]
