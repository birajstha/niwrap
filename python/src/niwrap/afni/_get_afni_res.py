# This file was auto generated by Styx.
# Do not edit this file directly.

from styxdefs import *
import pathlib
import typing

GET_AFNI_RES_METADATA = Metadata(
    id="155ff6922202df2702e45aae75eeb71fd3915235",
    name="GetAfniRes",
    container_image_type="docker",
    container_image_index="index.docker.io",
    container_image_tag="afni/afni:latest",
)


class GetAfniResOutputs(typing.NamedTuple):
    """
    Output object returned when calling `get_afni_res(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def get_afni_res(
    input_dataset: InputPathType,
    output_type: typing.Literal["-min", "-max", "-mean"] | None = None,
    runner: Runner | None = None,
) -> GetAfniResOutputs:
    """
    GetAfniRes by AFNI Developers.
    
    Tool to return the voxel resolution of a dataset.
    
    More information: https://afni.nimh.nih.gov/
    
    Args:
        input_dataset: Input dataset.
        output_type: Output type specifying whether to return the minimum,\
            maximum, or mean resolution.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `GetAfniResOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(GET_AFNI_RES_METADATA)
    cargs = []
    cargs.append("@GetAfniRes")
    if output_type is not None:
        cargs.extend(["", output_type])
    cargs.append(execution.input_file(input_dataset))
    ret = GetAfniResOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "GET_AFNI_RES_METADATA",
    "GetAfniResOutputs",
    "get_afni_res",
]
